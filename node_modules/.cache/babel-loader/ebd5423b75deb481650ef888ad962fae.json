{"ast":null,"code":"var _jsxFileName = \"/mnt/c/Users/moust/Documents/Scripts/frontend/src/components/scripts/script3/pages/page7.js\";\nimport { Component } from 'react';\nimport { connect } from 'react-redux';\nimport { patchTexts, postTexts } from '../../../../actions/text';\nimport BodyDiagram from '../../general pages/bodydiagram';\nimport shareScreen from '../../pictures/sharescreen.png';\nimport stopShare from '../../pictures/stopshare.png';\nimport body from '../../pictures/body.png';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nclass Page7 extends Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      body_image_clicked: false,\n      body_popup: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"body_diagram_popup\",\n        children: /*#__PURE__*/_jsxDEV(BodyDiagram, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 18,\n          columnNumber: 57\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 18,\n        columnNumber: 21\n      }, this)\n    };\n\n    this.handleBodyImageClicked = event => {\n      this.setState(prevState => ({\n        body_image_clicked: !prevState.body_image_clicked\n      }));\n\n      if (this.state.body_popup.className === \"body_diagram_popup\") {\n        this.setState({\n          body_popup: /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"body_diagram_popup show\",\n            children: /*#__PURE__*/_jsxDEV(BodyDiagram, {}, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 27,\n              columnNumber: 81\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 27,\n            columnNumber: 40\n          }, this)\n        });\n      } else {\n        this.setState({\n          body_popup: /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"body_diagram_popup\",\n            children: /*#__PURE__*/_jsxDEV(BodyDiagram, {}, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 30,\n              columnNumber: 76\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 30,\n            columnNumber: 40\n          }, this)\n        });\n      }\n    };\n\n    this.handleChange = event => {\n      const object_outcome = this.getObject(event.target.id);\n      object_outcome === \"\" ? this.props.postTexts({\n        value: event.target.value,\n        id_tag: event.target.id,\n        mentee_id: this.props.mentee_id,\n        script: this.props.script\n      }) : this.props.patchTexts({\n        value: event.target.value,\n        id_tag: event.target.id,\n        id: object_outcome.id,\n        mentee_id: this.props.mentee_id,\n        script: this.props.script\n      });\n    };\n\n    this.getObject = current_id_tag => {\n      //Returns the object that has the specific id_tag\n      let current_text = this.props.texts.find(text_item => {\n        return text_item.id_tag === current_id_tag;\n      });\n      return current_text ? current_text : \"\";\n    };\n\n    this.getValue = current_id_tag => {\n      //Same as getObject but instead it returns the value\n      let current_text_for_value = this.props.texts.find(text_item => {\n        return text_item.id_tag === current_id_tag;\n      });\n      return current_text_for_value ? current_text_for_value.value : \"\";\n    };\n  }\n\n  componentDidMount() {\n    debugger;\n  }\n\n  render() {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"sheet\",\n      children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n        className: \"bold center\",\n        children: \"Body scan\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 58,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"left container_for_medium_margin\",\n        children: [/*#__PURE__*/_jsxDEV(\"p\", {\n          children: \"Now we will practice thinking about how your body feels using something called a body scan.\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 60,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          id: \"div_with_body_image_and_p_page_7_script_3\",\n          children: [/*#__PURE__*/_jsxDEV(\"p\", {\n            children: \"Our bodies can help us learn about our feelings and emotions. I will show you an example.\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 62,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"image\",\n            alt: \"Body image\",\n            src: body,\n            name: \"body_image\",\n            className: \"body_diagram_button\",\n            id: \"body_image_button\",\n            onClick: event => this.handleBodyImageClicked(event)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 63,\n            columnNumber: 25\n          }, this), this.state.body_popup]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 61,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 66,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          id: \"instruction_box_number_1_page_7_script_3\",\n          className: \"custom_svg demo_box container_for_medium_margin\",\n          children: [/*#__PURE__*/_jsxDEV(\"p\", {\n            className: \"top_line_in_instruction_box\",\n            children: \"Click on the [link to be inserted] and share your screen. \"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 68,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 69,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 69,\n            columnNumber: 30\n          }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 69,\n            columnNumber: 35\n          }, this), /*#__PURE__*/_jsxDEV(\"img\", {\n            src: shareScreen,\n            alt: \"Share screen\",\n            id: \"share_your_screen_page_7_script_3\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 70,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 71,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 71,\n            columnNumber: 30\n          }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n            children: \"Explain your example \"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 72,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 67,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 74,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          id: \"instruction_box_number_2_page_7_script_3\",\n          className: \"custom_svg demo_box container_for_large_margin\",\n          children: [/*#__PURE__*/_jsxDEV(\"p\", {\n            className: \"top_line_in_instruction_box\",\n            children: \"When you are done, stop screen sharing\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 76,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"img\", {\n            src: stopShare,\n            alt: \"Stop sharing screen\",\n            id: \"stop_sharing_screen_page_7_script_3\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 77,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 75,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 59,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 57,\n      columnNumber: 13\n    }, this);\n  }\n\n}\n\nconst mapStateToProps = state => {\n  return {\n    texts: state.texts.curatedTextsFromCurrentScript,\n    mentee_id: state.mentees.current_mentee_id,\n    script: state.texts.currentScript\n  };\n};\n\nconst mapDispatchToProps = dispatch => {\n  return {\n    patchTexts: text_data => dispatch(patchTexts(text_data)),\n    postTexts: text_data => dispatch(postTexts(text_data))\n  };\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(Page7);","map":{"version":3,"sources":["/mnt/c/Users/moust/Documents/Scripts/frontend/src/components/scripts/script3/pages/page7.js"],"names":["Component","connect","patchTexts","postTexts","BodyDiagram","shareScreen","stopShare","body","Page7","state","body_image_clicked","body_popup","handleBodyImageClicked","event","setState","prevState","className","handleChange","object_outcome","getObject","target","id","props","value","id_tag","mentee_id","script","current_id_tag","current_text","texts","find","text_item","getValue","current_text_for_value","componentDidMount","render","mapStateToProps","curatedTextsFromCurrentScript","mentees","current_mentee_id","currentScript","mapDispatchToProps","dispatch","text_data"],"mappings":";AAAA,SAASA,SAAT,QAA0B,OAA1B;AAEA,SAASC,OAAT,QAAwB,aAAxB;AAEA,SAASC,UAAT,EAAqBC,SAArB,QAAsC,0BAAtC;AAEA,OAAOC,WAAP,MAAwB,iCAAxB;AAEA,OAAOC,WAAP,MAAwB,gCAAxB;AACA,OAAOC,SAAP,MAAsB,8BAAtB;AACA,OAAOC,IAAP,MAAiB,yBAAjB;;;AAGA,MAAMC,KAAN,SAAoBR,SAApB,CAA8B;AAAA;AAAA;AAAA,SAE1BS,KAF0B,GAElB;AACJC,MAAAA,kBAAkB,EAAE,KADhB;AAEJC,MAAAA,UAAU,eAAE;AAAK,QAAA,SAAS,EAAC,oBAAf;AAAA,+BAAoC,QAAC,WAAD;AAAA;AAAA;AAAA;AAAA;AAApC;AAAA;AAAA;AAAA;AAAA;AAFR,KAFkB;;AAAA,SAU1BC,sBAV0B,GAUAC,KAAD,IAAW;AAChC,WAAKC,QAAL,CAAcC,SAAS,KAAK;AAACL,QAAAA,kBAAkB,EAAE,CAACK,SAAS,CAACL;AAAhC,OAAL,CAAvB;;AACA,UAAI,KAAKD,KAAL,CAAWE,UAAX,CAAsBK,SAAtB,KAAoC,oBAAxC,EAA6D;AACzD,aAAKF,QAAL,CAAc;AAACH,UAAAA,UAAU,eAAE;AAAK,YAAA,SAAS,EAAC,yBAAf;AAAA,mCAAyC,QAAC,WAAD;AAAA;AAAA;AAAA;AAAA;AAAzC;AAAA;AAAA;AAAA;AAAA;AAAb,SAAd;AACH,OAFD,MAGI;AACA,aAAKG,QAAL,CAAc;AAACH,UAAAA,UAAU,eAAE;AAAK,YAAA,SAAS,EAAC,oBAAf;AAAA,mCAAoC,QAAC,WAAD;AAAA;AAAA;AAAA;AAAA;AAApC;AAAA;AAAA;AAAA;AAAA;AAAb,SAAd;AACH;AACJ,KAlByB;;AAAA,SAoB1BM,YApB0B,GAoBVJ,KAAD,IAAW;AACtB,YAAMK,cAAc,GAAG,KAAKC,SAAL,CAAeN,KAAK,CAACO,MAAN,CAAaC,EAA5B,CAAvB;AACAH,MAAAA,cAAc,KAAK,EAAnB,GACA,KAAKI,KAAL,CAAWnB,SAAX,CAAqB;AAACoB,QAAAA,KAAK,EAAEV,KAAK,CAACO,MAAN,CAAaG,KAArB;AAA4BC,QAAAA,MAAM,EAAEX,KAAK,CAACO,MAAN,CAAaC,EAAjD;AAAqDI,QAAAA,SAAS,EAAE,KAAKH,KAAL,CAAWG,SAA3E;AAAsFC,QAAAA,MAAM,EAAE,KAAKJ,KAAL,CAAWI;AAAzG,OAArB,CADA,GAGA,KAAKJ,KAAL,CAAWpB,UAAX,CAAsB;AAACqB,QAAAA,KAAK,EAAEV,KAAK,CAACO,MAAN,CAAaG,KAArB;AAA4BC,QAAAA,MAAM,EAAEX,KAAK,CAACO,MAAN,CAAaC,EAAjD;AAAqDA,QAAAA,EAAE,EAAEH,cAAc,CAACG,EAAxE;AAA4EI,QAAAA,SAAS,EAAE,KAAKH,KAAL,CAAWG,SAAlG;AAA6GC,QAAAA,MAAM,EAAE,KAAKJ,KAAL,CAAWI;AAAhI,OAAtB,CAHA;AAKH,KA3ByB;;AAAA,SA6B1BP,SA7B0B,GA6BbQ,cAAD,IAAoB;AAC5B;AACA,UAAIC,YAAY,GAAG,KAAKN,KAAL,CAAWO,KAAX,CAAiBC,IAAjB,CAAsBC,SAAS,IAAI;AAAC,eAAOA,SAAS,CAACP,MAAV,KAAqBG,cAA5B;AAA2C,OAA/E,CAAnB;AACA,aAAOC,YAAY,GAAGA,YAAH,GAAkB,EAArC;AACH,KAjCyB;;AAAA,SAmC1BI,QAnC0B,GAmCdL,cAAD,IAAoB;AAC3B;AACA,UAAIM,sBAAsB,GAAG,KAAKX,KAAL,CAAWO,KAAX,CAAiBC,IAAjB,CAAsBC,SAAS,IAAI;AAAC,eAAOA,SAAS,CAACP,MAAV,KAAqBG,cAA5B;AAA2C,OAA/E,CAA7B;AACA,aAAOM,sBAAsB,GAAGA,sBAAsB,CAACV,KAA1B,GAAkC,EAA/D;AACH,KAvCyB;AAAA;;AAO1BW,EAAAA,iBAAiB,GAAE;AACf;AACH;;AAgCDC,EAAAA,MAAM,GAAG;AACL,wBACI;AAAK,MAAA,SAAS,EAAC,OAAf;AAAA,8BACI;AAAI,QAAA,SAAS,EAAC,aAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cADJ,eAEI;AAAK,QAAA,SAAS,EAAC,kCAAf;AAAA,gCACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBADJ,eAEI;AAAK,UAAA,EAAE,EAAC,2CAAR;AAAA,kCACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBADJ,eAEI;AAAO,YAAA,IAAI,EAAC,OAAZ;AAAoB,YAAA,GAAG,EAAC,YAAxB;AAAqC,YAAA,GAAG,EAAE5B,IAA1C;AAAgD,YAAA,IAAI,EAAC,YAArD;AAAkE,YAAA,SAAS,EAAC,qBAA5E;AAAkG,YAAA,EAAE,EAAC,mBAArG;AAAyH,YAAA,OAAO,EAAEM,KAAK,IAAI,KAAKD,sBAAL,CAA4BC,KAA5B;AAA3I;AAAA;AAAA;AAAA;AAAA,kBAFJ,EAGK,KAAKJ,KAAL,CAAWE,UAHhB;AAAA;AAAA;AAAA;AAAA;AAAA,gBAFJ,eAOI;AAAA;AAAA;AAAA;AAAA,gBAPJ,eAQI;AAAK,UAAA,EAAE,EAAC,0CAAR;AAAmD,UAAA,SAAS,EAAC,iDAA7D;AAAA,kCACI;AAAG,YAAA,SAAS,EAAC,6BAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBADJ,eAEI;AAAA;AAAA;AAAA;AAAA,kBAFJ,eAES;AAAA;AAAA;AAAA;AAAA,kBAFT,eAEc;AAAA;AAAA;AAAA;AAAA,kBAFd,eAGI;AAAK,YAAA,GAAG,EAAEN,WAAV;AAAuB,YAAA,GAAG,EAAC,cAA3B;AAA0C,YAAA,EAAE,EAAC;AAA7C;AAAA;AAAA;AAAA;AAAA,kBAHJ,eAII;AAAA;AAAA;AAAA;AAAA,kBAJJ,eAIS;AAAA;AAAA;AAAA;AAAA,kBAJT,eAKI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBALJ;AAAA;AAAA;AAAA;AAAA;AAAA,gBARJ,eAeI;AAAA;AAAA;AAAA;AAAA,gBAfJ,eAgBI;AAAK,UAAA,EAAE,EAAC,0CAAR;AAAmD,UAAA,SAAS,EAAC,gDAA7D;AAAA,kCACI;AAAG,YAAA,SAAS,EAAC,6BAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBADJ,eAEI;AAAK,YAAA,GAAG,EAAEC,SAAV;AAAqB,YAAA,GAAG,EAAC,qBAAzB;AAA+C,YAAA,EAAE,EAAC;AAAlD;AAAA;AAAA;AAAA;AAAA,kBAFJ;AAAA;AAAA;AAAA;AAAA;AAAA,gBAhBJ;AAAA;AAAA;AAAA;AAAA;AAAA,cAFJ;AAAA;AAAA;AAAA;AAAA;AAAA,YADJ;AA0BH;;AApEyB;;AAyE9B,MAAM8B,eAAe,GAAG3B,KAAK,IAAI;AAC7B,SAAM;AACFoB,IAAAA,KAAK,EAAEpB,KAAK,CAACoB,KAAN,CAAYQ,6BADjB;AAEFZ,IAAAA,SAAS,EAAEhB,KAAK,CAAC6B,OAAN,CAAcC,iBAFvB;AAGFb,IAAAA,MAAM,EAAEjB,KAAK,CAACoB,KAAN,CAAYW;AAHlB,GAAN;AAKH,CAND;;AAQA,MAAMC,kBAAkB,GAAGC,QAAQ,IAAI;AACnC,SAAM;AACFxC,IAAAA,UAAU,EAAGyC,SAAD,IAAeD,QAAQ,CAACxC,UAAU,CAACyC,SAAD,CAAX,CADjC;AAEFxC,IAAAA,SAAS,EAAGwC,SAAD,IAAeD,QAAQ,CAACvC,SAAS,CAACwC,SAAD,CAAV;AAFhC,GAAN;AAKH,CAND;;AAQA,eAAe1C,OAAO,CAACmC,eAAD,EAAkBK,kBAAlB,CAAP,CAA6CjC,KAA7C,CAAf","sourcesContent":["import { Component } from 'react';\r\n\r\nimport { connect } from 'react-redux';\r\n\r\nimport { patchTexts, postTexts } from '../../../../actions/text';\r\n\r\nimport BodyDiagram from '../../general pages/bodydiagram';\r\n\r\nimport shareScreen from '../../pictures/sharescreen.png';\r\nimport stopShare from '../../pictures/stopshare.png';\r\nimport body from '../../pictures/body.png';\r\n\r\n\r\nclass Page7 extends Component {\r\n\r\n    state = {\r\n        body_image_clicked: false,\r\n        body_popup: <div className='body_diagram_popup'><BodyDiagram /></div>\r\n    }\r\n\r\n    componentDidMount(){\r\n        debugger;\r\n    }\r\n    handleBodyImageClicked = (event) => {\r\n        this.setState(prevState => ({body_image_clicked: !prevState.body_image_clicked}))\r\n        if (this.state.body_popup.className === \"body_diagram_popup\"){\r\n            this.setState({body_popup: <div className='body_diagram_popup show'><BodyDiagram /></div>})\r\n        }\r\n        else{\r\n            this.setState({body_popup: <div className='body_diagram_popup'><BodyDiagram /></div>})\r\n        }\r\n    }\r\n    \r\n    handleChange = (event) => {\r\n        const object_outcome = this.getObject(event.target.id)\r\n        object_outcome === \"\" ? \r\n        this.props.postTexts({value: event.target.value, id_tag: event.target.id, mentee_id: this.props.mentee_id, script: this.props.script})\r\n        :\r\n        this.props.patchTexts({value: event.target.value, id_tag: event.target.id, id: object_outcome.id, mentee_id: this.props.mentee_id, script: this.props.script})\r\n\r\n    }\r\n    \r\n    getObject = (current_id_tag) => {\r\n        //Returns the object that has the specific id_tag\r\n        let current_text = this.props.texts.find(text_item => {return text_item.id_tag === current_id_tag})\r\n        return current_text ? current_text : \"\"\r\n    }\r\n\r\n    getValue = (current_id_tag) => {\r\n        //Same as getObject but instead it returns the value\r\n        let current_text_for_value = this.props.texts.find(text_item => {return text_item.id_tag === current_id_tag})\r\n        return current_text_for_value ? current_text_for_value.value : \"\"\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <div className=\"sheet\">\r\n                <h1 className=\"bold center\">Body scan</h1>\r\n                <div className=\"left container_for_medium_margin\">\r\n                    <p>Now we will practice thinking about how your body feels using something called a body scan.</p>\r\n                    <div id=\"div_with_body_image_and_p_page_7_script_3\">\r\n                        <p>Our bodies can help us learn about our feelings and emotions. I will show you an example.</p>\r\n                        <input type=\"image\" alt=\"Body image\" src={body} name=\"body_image\" className=\"body_diagram_button\" id=\"body_image_button\" onClick={event => this.handleBodyImageClicked(event)} />\r\n                        {this.state.body_popup}\r\n                    </div>\r\n                    <br/>\r\n                    <div id=\"instruction_box_number_1_page_7_script_3\" className=\"custom_svg demo_box container_for_medium_margin\">\r\n                        <p className=\"top_line_in_instruction_box\">Click on the [link to be inserted] and share your screen. </p>\r\n                        <br/><br/><br/>\r\n                        <img src={shareScreen} alt=\"Share screen\" id=\"share_your_screen_page_7_script_3\"/>\r\n                        <br/><br/>\r\n                        <p>Explain your example </p>\r\n                    </div>\r\n                    <br/>\r\n                    <div id=\"instruction_box_number_2_page_7_script_3\" className=\"custom_svg demo_box container_for_large_margin\">\r\n                        <p className='top_line_in_instruction_box'>When you are done, stop screen sharing</p>\r\n                        <img src={stopShare} alt=\"Stop sharing screen\" id=\"stop_sharing_screen_page_7_script_3\"/>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        )\r\n    }\r\n\r\n\r\n}\r\n\r\nconst mapStateToProps = state => {\r\n    return{\r\n        texts: state.texts.curatedTextsFromCurrentScript,\r\n        mentee_id: state.mentees.current_mentee_id,\r\n        script: state.texts.currentScript\r\n    }\r\n}\r\n\r\nconst mapDispatchToProps = dispatch => {\r\n    return{\r\n        patchTexts: (text_data) => dispatch(patchTexts(text_data)),\r\n        postTexts: (text_data) => dispatch(postTexts(text_data))\r\n\r\n    }\r\n}\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(Page7);\r\n"]},"metadata":{},"sourceType":"module"}