{"ast":null,"code":"var _jsxFileName = \"/mnt/c/Users/moust/Documents/Scripts/frontend/src/App.js\";\nimport { Component } from 'react';\nimport { connect } from 'react-redux';\nimport { getTexts, changeTexts } from './actions/text';\nimport { userLogout, autoLogin } from './actions/user';\nimport hamburgerMenu from \"./components/scripts/pictures/hamburger_menu.png\";\nimport './App.css'; // import Script1List from './components/scripts/script1/componentlist';\n// import Script2List from './components/scripts/script2/componentlist';\n// import Script3List from './components/scripts/script3/componentlist';\n// import Script4List from './components/scripts/script4/componentlist';\n// import Script5List from './components/scripts/script5/componentlist';\n// import Script6List from './components/scripts/script6/componentlist';\n// import Script7List from './components/scripts/script7/componentlist';\n// import Script8List from './components/scripts/script8/componentlist';\n// import Script9List from './components/scripts/script9/componentlist';\n// import Script10List from './components/scripts/script10/componentlist';\n// import Script11List from './components/scripts/script11/componentlist';\n// import Script12List from './components/scripts/script12/componentlist';\n// import Script13List from './components/scripts/script13/componentlist';\n\nimport Users from './components/users/users.js'; // import ScriptDummyList from './components/scripts/dummy script/componentlist';\n\nimport GeneralPageRenderer from './components/scripts/dummy script/pages/generalpage';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nclass App extends Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      componentList: [/*#__PURE__*/_jsxDEV(Script1List, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 30,\n        columnNumber: 21\n      }, this), /*#__PURE__*/_jsxDEV(Script2List, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 30,\n        columnNumber: 38\n      }, this), /*#__PURE__*/_jsxDEV(Script3List, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 30,\n        columnNumber: 55\n      }, this), /*#__PURE__*/_jsxDEV(Script4List, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 30,\n        columnNumber: 72\n      }, this), /*#__PURE__*/_jsxDEV(Script5List, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 30,\n        columnNumber: 89\n      }, this), /*#__PURE__*/_jsxDEV(Script6List, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 30,\n        columnNumber: 106\n      }, this), /*#__PURE__*/_jsxDEV(Script7List, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 30,\n        columnNumber: 123\n      }, this), /*#__PURE__*/_jsxDEV(Script8List, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 30,\n        columnNumber: 140\n      }, this), /*#__PURE__*/_jsxDEV(Script9List, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 30,\n        columnNumber: 157\n      }, this), /*#__PURE__*/_jsxDEV(Script10List, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 30,\n        columnNumber: 174\n      }, this), /*#__PURE__*/_jsxDEV(Script11List, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 30,\n        columnNumber: 192\n      }, this), /*#__PURE__*/_jsxDEV(Script12List, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 30,\n        columnNumber: 210\n      }, this), /*#__PURE__*/_jsxDEV(Script13List, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 30,\n        columnNumber: 228\n      }, this)],\n      currComponent: null,\n      buttonList: [],\n      hamburger_is_clicked: false,\n      options: ''\n    };\n\n    this.componentDidMount = () => {\n      if (localStorage.getItem(\"token\")) {\n        this.props.autoLogin();\n      }\n\n      this.makeButtons();\n    };\n\n    this.hamburgerClick = event => {\n      if (this.state.hamburger_is_clicked === true) {\n        this.setState({\n          hamburger_is_clicked: false,\n          options: ''\n        });\n      } else if (this.state.hamburger_is_clicked === false) {\n        this.setState({\n          hamburger_is_clicked: true,\n          options: /*#__PURE__*/_jsxDEV(\"div\", {\n            children: [/*#__PURE__*/_jsxDEV(\"p\", {\n              onClick: event => this.menuItemHandleClick(event, 1),\n              children: \"Change Script\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 53,\n              columnNumber: 13\n            }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n              onClick: event => this.menuItemHandleClick(event, 2),\n              children: \"Logout\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 54,\n              columnNumber: 13\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 52,\n            columnNumber: 9\n          }, this)\n        });\n      }\n    };\n\n    this.menuItemHandleClick = (e, choice) => {\n      //For the hamburger menu\n      if (choice === 1) {\n        this.makeButtons();\n        this.props.changeTexts();\n      } else if (choice === 2) {\n        this.props.userLogout();\n      }\n    };\n\n    this.handleClick = script_number => {\n      //Once a button is clicked, it takes you to the coresponding component\n      this.setState({\n        buttonList: null\n      });\n      this.setState({\n        currComponent: this.state.componentList[script_number]\n      });\n      this.props.getTexts(script_number);\n    };\n\n    this.makeButtons = () => {\n      //Makes the button list depending on the componenents present in the componenet list\n      for (let i = 1; i < 14; i++) {\n        this.setState(prevstate => ({\n          buttonList: prevstate.buttonList.concat( /*#__PURE__*/_jsxDEV(\"button\", {\n            onClick: () => this.handleClick(i.toString()),\n            children: [\"Script \", i]\n          }, i, true, {\n            fileName: _jsxFileName,\n            lineNumber: 81,\n            columnNumber: 78\n          }, this))\n        }));\n      }\n    };\n  }\n\n  render() {\n    if (localStorage.getItem(\"token\")) {\n      if (this.props.pages_loading || this.props.texts_loading) {\n        return /*#__PURE__*/_jsxDEV(\"h1\", {\n          children: \"Loading\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 90,\n          columnNumber: 11\n        }, this);\n      }\n\n      if (this.props.texts.curatedTextsFromCurrentScript === null) {\n        return /*#__PURE__*/_jsxDEV(\"div\", {\n          children: this.state.buttonList\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 95,\n          columnNumber: 11\n        }, this);\n      } else {\n        return /*#__PURE__*/_jsxDEV(\"div\", {\n          children: [/*#__PURE__*/_jsxDEV(GeneralPageRenderer, {\n            pages: this.props.pages.pagesChosen,\n            texts: this.props.texts.curatedTextsFromCurrentScript\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 103,\n            columnNumber: 14\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"hamburger_menu_div\",\n            children: [/*#__PURE__*/_jsxDEV(\"img\", {\n              className: this.state.hamburger_is_clicked ? \"rotate\" : \"no_rotate\",\n              src: hamburgerMenu,\n              alt: \"Hamburger menu icon\",\n              onClick: event => this.hamburgerClick(event)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 105,\n              columnNumber: 19\n            }, this), this.state.options]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 104,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 102,\n          columnNumber: 11\n        }, this);\n      }\n    } else {\n      return /*#__PURE__*/_jsxDEV(Users, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 115,\n        columnNumber: 9\n      }, this);\n    }\n  }\n\n}\n\nconst mapStateToProps = state => {\n  return {\n    pages: state.pages,\n    texts: state.texts,\n    user: state.user,\n    pages_loading: state.pages.loading,\n    texts_loading: state.texts.loading\n  };\n};\n\nconst mapDispatchToProps = dispatch => {\n  return {\n    getTexts: script_number => dispatch(getTexts(script_number)),\n    changeTexts: () => dispatch(changeTexts()),\n    userLogout: () => dispatch(userLogout()),\n    autoLogin: () => dispatch(autoLogin())\n  };\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(App);","map":{"version":3,"sources":["/mnt/c/Users/moust/Documents/Scripts/frontend/src/App.js"],"names":["Component","connect","getTexts","changeTexts","userLogout","autoLogin","hamburgerMenu","Users","GeneralPageRenderer","App","state","componentList","currComponent","buttonList","hamburger_is_clicked","options","componentDidMount","localStorage","getItem","props","makeButtons","hamburgerClick","event","setState","menuItemHandleClick","e","choice","handleClick","script_number","i","prevstate","concat","toString","render","pages_loading","texts_loading","texts","curatedTextsFromCurrentScript","pages","pagesChosen","mapStateToProps","user","loading","mapDispatchToProps","dispatch"],"mappings":"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","sourcesContent":["import { Component } from 'react';\nimport { connect } from 'react-redux';\nimport { getTexts, changeTexts } from './actions/text';\nimport { userLogout, autoLogin } from './actions/user';\n\nimport hamburgerMenu from \"./components/scripts/pictures/hamburger_menu.png\";\nimport './App.css';\n\n// import Script1List from './components/scripts/script1/componentlist';\n// import Script2List from './components/scripts/script2/componentlist';\n// import Script3List from './components/scripts/script3/componentlist';\n// import Script4List from './components/scripts/script4/componentlist';\n// import Script5List from './components/scripts/script5/componentlist';\n// import Script6List from './components/scripts/script6/componentlist';\n// import Script7List from './components/scripts/script7/componentlist';\n// import Script8List from './components/scripts/script8/componentlist';\n// import Script9List from './components/scripts/script9/componentlist';\n// import Script10List from './components/scripts/script10/componentlist';\n// import Script11List from './components/scripts/script11/componentlist';\n// import Script12List from './components/scripts/script12/componentlist';\n// import Script13List from './components/scripts/script13/componentlist';\nimport Users from './components/users/users.js';\n// import ScriptDummyList from './components/scripts/dummy script/componentlist';\nimport GeneralPageRenderer from './components/scripts/dummy script/pages/generalpage';\n\n\nclass App extends Component {\n  \n  state = {\n    componentList: [<Script1List />, <Script2List />, <Script3List />, <Script4List />, <Script5List />, <Script6List />, <Script7List />, <Script8List />, <Script9List />, <Script10List />, <Script11List />, <Script12List />, <Script13List />], \n    currComponent: null,\n    buttonList: [],\n    hamburger_is_clicked: false,\n    options: ''\n  }\n\n  componentDidMount = () => {\n    if (localStorage.getItem(\"token\")){\n      this.props.autoLogin();\n    }\n    this.makeButtons();\n  }\n\n  hamburgerClick = (event) => {\n    if (this.state.hamburger_is_clicked === true){\n        this.setState({hamburger_is_clicked: false, options: ''})\n    }\n  \n    else if (this.state.hamburger_is_clicked === false){\n        this.setState({hamburger_is_clicked: true,\n        options: \n        <div>\n            <p onClick={event => this.menuItemHandleClick(event, 1)}>Change Script</p>\n            <p onClick={event => this.menuItemHandleClick(event, 2)}>Logout</p>\n        </div>\n    })\n    }\n  }\n  \n  menuItemHandleClick = (e, choice) => {\n    //For the hamburger menu\n    if (choice === 1){\n      this.makeButtons();\n      this.props.changeTexts();\n    }\n    else if (choice === 2){\n      this.props.userLogout();\n    }\n     \n  }\n\n  handleClick = (script_number) => {//Once a button is clicked, it takes you to the coresponding component\n    this.setState({buttonList: null});\n    this.setState({currComponent: this.state.componentList[script_number]})\n    this.props.getTexts(script_number);\n  }\n\n\n  makeButtons = () => {//Makes the button list depending on the componenents present in the componenet list\n    for (let i = 1; i < 14; i++){\n      this.setState((prevstate) => ({buttonList: prevstate.buttonList.concat(<button key={i} onClick={() => this.handleClick(i.toString())}>Script {i}</button>)}));\n    } \n    \n  }\n\n  render() {\n    if (localStorage.getItem(\"token\")){\n      if ((this.props.pages_loading || this.props.texts_loading)){\n        return(\n          <h1>Loading</h1>\n        )\n      }\n      if ((this.props.texts.curatedTextsFromCurrentScript === null)){\n        return (\n          <div>\n            {this.state.buttonList}\n          </div>\n        )\n      }\n      else{\n        return(\n          <div>\n            {<GeneralPageRenderer pages={this.props.pages.pagesChosen} texts={this.props.texts.curatedTextsFromCurrentScript} />}\n            <div className=\"hamburger_menu_div\">\n                  <img className={this.state.hamburger_is_clicked ? \"rotate\" : \"no_rotate\"} src={hamburgerMenu} alt=\"Hamburger menu icon\" onClick={(event) => this.hamburgerClick(event)} />\n                  {this.state.options}\n            </div>\n          </div>\n          \n        )\n      }\n    }\n    else{\n      return(\n        <Users />\n        )\n      }\n  }\n} \n\n\nconst mapStateToProps = state => {\n  return{\n    pages: state.pages,\n    texts: state.texts,\n    user: state.user,\n    pages_loading: state.pages.loading,\n    texts_loading: state.texts.loading\n  }\n}\n\nconst mapDispatchToProps = dispatch => {\n  return{\n      getTexts: (script_number) => dispatch(getTexts(script_number)),\n      changeTexts: () => dispatch(changeTexts()),\n      userLogout: () => dispatch(userLogout()),\n      autoLogin: () => dispatch(autoLogin())\n  }\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(App);\n"]},"metadata":{},"sourceType":"module"}