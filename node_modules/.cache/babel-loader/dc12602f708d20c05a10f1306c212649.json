{"ast":null,"code":"var _jsxFileName = \"/mnt/c/Users/moust/Documents/Scripts/frontend/src/components/scripts/dummy script/pages/generalpage.js\",\n    _s = $RefreshSig$();\n\nimport { useState, useEffect } from 'react';\nimport axios from 'axios';\nimport parse from 'html-react-parser';\nimport ContentEditable from 'react-contenteditable';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst GeneralPageRenderer = props => {\n  _s();\n\n  const [content, setContent] = useState(''); //   const [pageNum, setPageNumber] = useState('');\n  //   const [script, setScript] = useState('');\n  //   const handleChange = (event) => {\n  //   }\n\n  const getSheets = () => {\n    axios.get(\"http://localhost:3001/scripts\").then(res => {\n      const scripts = res.data;\n\n      for (const script of scripts) {\n        if (script.script === \"dummy\" && script.page_number === \"1\") {\n          content_decipherer(script);\n          break;\n        }\n      }\n    });\n  };\n\n  const content_decipherer = script => {\n    // setPageNumber(script.page_number);\n    // setScript(script.script) ;\n    setContent(parse(script.content.replaceAll(\"\\\\\", \"\")));\n  };\n\n  useEffect(() => {\n    getSheets();\n  });\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: /*#__PURE__*/_jsxDEV(ContentEditable, {\n      html: content\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 40,\n      columnNumber: 9\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 39,\n    columnNumber: 7\n  }, this);\n};\n\n_s(GeneralPageRenderer, \"wipnac41BTB3eHT+ORLT1pgXER0=\");\n\n_c = GeneralPageRenderer;\nexport default GeneralPageRenderer;\n\nvar _c;\n\n$RefreshReg$(_c, \"GeneralPageRenderer\");","map":{"version":3,"sources":["/mnt/c/Users/moust/Documents/Scripts/frontend/src/components/scripts/dummy script/pages/generalpage.js"],"names":["useState","useEffect","axios","parse","ContentEditable","GeneralPageRenderer","props","content","setContent","getSheets","get","then","res","scripts","data","script","page_number","content_decipherer","replaceAll"],"mappings":";;;AAAA,SAAQA,QAAR,EAAkBC,SAAlB,QAAkC,OAAlC;AACA,OAAOC,KAAP,MAAkB,OAAlB;AACA,OAAOC,KAAP,MAAkB,mBAAlB;AACA,OAAOC,eAAP,MAA4B,uBAA5B;;;AAEA,MAAMC,mBAAmB,GAAIC,KAAD,IAAW;AAAA;;AACrC,QAAM,CAACC,OAAD,EAAUC,UAAV,IAAwBR,QAAQ,CAAC,EAAD,CAAtC,CADqC,CAEvC;AACA;AAEA;AAEA;;AAEE,QAAMS,SAAS,GAAG,MAAM;AACpBP,IAAAA,KAAK,CAACQ,GAAN,CAAU,+BAAV,EACCC,IADD,CACMC,GAAG,IAAI;AACT,YAAMC,OAAO,GAAGD,GAAG,CAACE,IAApB;;AACA,WAAK,MAAMC,MAAX,IAAqBF,OAArB,EAA6B;AACzB,YAAIE,MAAM,CAACA,MAAP,KAAkB,OAAlB,IAA6BA,MAAM,CAACC,WAAP,KAAuB,GAAxD,EAA4D;AACxDC,UAAAA,kBAAkB,CAACF,MAAD,CAAlB;AACA;AACH;AACJ;AACR,KATG;AAUL,GAXC;;AAaE,QAAME,kBAAkB,GAAIF,MAAD,IAAY;AACnC;AACA;AACAP,IAAAA,UAAU,CAACL,KAAK,CAACY,MAAM,CAACR,OAAP,CAAeW,UAAf,CAA0B,IAA1B,EAAgC,EAAhC,CAAD,CAAN,CAAV;AACC,GAJL;;AAOFjB,EAAAA,SAAS,CAAE,MAAM;AAACQ,IAAAA,SAAS;AAAG,GAArB,CAAT;AAGA,sBACI;AAAA,2BACE,QAAC,eAAD;AAAiB,MAAA,IAAI,EAAEF;AAAvB;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,UADJ;AAKD,CArCD;;GAAMF,mB;;KAAAA,mB;AAuCN,eAAeA,mBAAf","sourcesContent":["import {useState, useEffect} from 'react';\r\nimport axios from 'axios';\r\nimport parse from 'html-react-parser';\r\nimport ContentEditable from 'react-contenteditable';\r\n\r\nconst GeneralPageRenderer = (props) => {\r\n  const [content, setContent] = useState('');\r\n//   const [pageNum, setPageNumber] = useState('');\r\n//   const [script, setScript] = useState('');\r\n\r\n//   const handleChange = (event) => {\r\n    \r\n//   }\r\n\r\n  const getSheets = () => {\r\n      axios.get(\"http://localhost:3001/scripts\")\r\n      .then(res => {\r\n          const scripts = res.data;\r\n          for (const script of scripts){\r\n              if (script.script === \"dummy\" && script.page_number === \"1\"){\r\n                  content_decipherer(script);\r\n                  break \r\n              }\r\n          }\r\n  })\r\n}\r\n\r\n    const content_decipherer = (script) => {\r\n        // setPageNumber(script.page_number);\r\n        // setScript(script.script) ;\r\n        setContent(parse(script.content.replaceAll(\"\\\\\", \"\")))\r\n        }\r\n        \r\n\r\n  useEffect (() => {getSheets()})\r\n  \r\n\r\n  return (\r\n      <div>\r\n        <ContentEditable html={content} />\r\n      </div>\r\n  )\r\n}\r\n\r\nexport default GeneralPageRenderer"]},"metadata":{},"sourceType":"module"}