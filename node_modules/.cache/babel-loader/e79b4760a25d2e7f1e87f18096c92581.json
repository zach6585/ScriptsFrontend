{"ast":null,"code":"var _jsxFileName = \"/mnt/c/Users/moust/Documents/Scripts/frontend/src/App.js\";\nimport { Component } from 'react';\nimport { connect } from 'react-redux';\nimport { getTexts } from './actions/text/textsAxiosCallAction';\nimport { getScripts } from './actions/script/scriptAxiosCallAction'; // import Script1List from './components/scripts/script1/componentlist';\n// import Script2List from './components/scripts/script2/componentlist';\n// import Script3List from './components/scripts/script3/componentlist';\n// import Script4List from './components/scripts/script4/componentlist';\n// import Script5List from './components/scripts/script5/componentlist';\n// import Script6List from './components/scripts/script6/componentlist';\n// import Script7List from './components/scripts/script7/componentlist';\n// import Script8List from './components/scripts/script8/componentlist';\n// import Script9List from './components/scripts/script9/componentlist';\n// import Script10List from './components/scripts/script10/componentlist';\n// import Script11List from './components/scripts/script11/componentlist';\n// import Script12List from './components/scripts/script12/componentlist';\n// import Script13List from './components/scripts/script13/componentlist';\n// import Users from './components/users/users.js';\n\nimport ScriptDummyList from './components/scripts/dummy script/componentlist';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nclass App extends Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      componentList: [/*#__PURE__*/_jsxDEV(ScriptDummyList, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 28,\n        columnNumber: 21\n      }, this)],\n      buttonList: [],\n      allPages: {},\n      allTexts: {},\n      scriptDataIsReturned: false,\n      textDataIsReturned: false\n    };\n\n    this.componentDidMount = () => {\n      this.makeButtons(); // this.props.getTexts();\n      // this.props.getScript();\n    };\n\n    this.handleClick = script_number => {\n      //Once a button is clicked, it takes you to the coresponding component\n      this.setState({\n        buttonList: null\n      }); // this.store.dispatch({\n      //   type: 'SCRIPT_PICKED',\n      //   script_number: script_number\n      // })\n      // this.store.dispatch({\n      //   type: 'TEXTS_FROM_SCRIPT',\n      //   script_number: script_number\n      // })\n    };\n\n    this.makeButtons = () => {\n      //Makes the button list depending on the componenents present in the componenet list\n      for (let i = 1; i < 14; i++) {\n        this.setState(prevstate => ({\n          buttonList: prevstate.buttonList.concat( /*#__PURE__*/_jsxDEV(\"button\", {\n            onClick: () => this.handleClick(i.toString()),\n            children: [\"Script \", i]\n          }, i, true, {\n            fileName: _jsxFileName,\n            lineNumber: 55,\n            columnNumber: 78\n          }, this))\n        }));\n      }\n    };\n  }\n\n  render() {\n    console.log(this.props.scripts);\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: this.state.buttonList\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 63,\n      columnNumber: 7\n    }, this);\n  }\n\n}\n\nconst mapStateToProps = state => {\n  console.log(state);\n  return {\n    scripts: state.scripts,\n    texts: state.texts,\n    loading: state.loading,\n    clicked: state.clicked\n  };\n};\n\nexport default connect(mapStateToProps, {\n  getScripts,\n  getTexts\n})(App); //<Script1List />, <Script2List />, <Script3List />, <Script4List />, <Script5List />, <Script6List />, <Script7List />, <Script8List />, <Script9List />, <Script10List />, <Script11List />, <Script12List />, <Script13List />","map":{"version":3,"sources":["/mnt/c/Users/moust/Documents/Scripts/frontend/src/App.js"],"names":["Component","connect","getTexts","getScripts","ScriptDummyList","App","state","componentList","buttonList","allPages","allTexts","scriptDataIsReturned","textDataIsReturned","componentDidMount","makeButtons","handleClick","script_number","setState","i","prevstate","concat","toString","render","console","log","props","scripts","mapStateToProps","texts","loading","clicked"],"mappings":";AACA,SAASA,SAAT,QAA0B,OAA1B;AACA,SAASC,OAAT,QAAwB,aAAxB;AACA,SAASC,QAAT,QAAyB,qCAAzB;AACA,SAASC,UAAT,QAA2B,wCAA3B,C,CAGA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AACA,OAAOC,eAAP,MAA4B,iDAA5B;;;AAGA,MAAMC,GAAN,SAAkBL,SAAlB,CAA4B;AAAA;AAAA;AAAA,SAE1BM,KAF0B,GAElB;AACNC,MAAAA,aAAa,EAAE,cAAC,QAAC,eAAD;AAAA;AAAA;AAAA;AAAA,cAAD,CADT;AACgCC,MAAAA,UAAU,EAAE,EAD5C;AACgDC,MAAAA,QAAQ,EAAE,EAD1D;AAC8DC,MAAAA,QAAQ,EAAE,EADxE;AAC4EC,MAAAA,oBAAoB,EAAE,KADlG;AACyGC,MAAAA,kBAAkB,EAAE;AAD7H,KAFkB;;AAAA,SAQ1BC,iBAR0B,GAQN,MAAM;AACxB,WAAKC,WAAL,GADwB,CAExB;AACA;AACD,KAZyB;;AAAA,SAc1BC,WAd0B,GAcXC,aAAD,IAAmB;AAAC;AAChC,WAAKC,QAAL,CAAc;AAACT,QAAAA,UAAU,EAAE;AAAb,OAAd,EAD+B,CAE/B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAED,KAzByB;;AAAA,SA4B1BM,WA5B0B,GA4BZ,MAAM;AAAC;AACnB,WAAK,IAAII,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAAG,EAApB,EAAwBA,CAAC,EAAzB,EAA4B;AAC1B,aAAKD,QAAL,CAAeE,SAAD,KAAgB;AAACX,UAAAA,UAAU,EAAEW,SAAS,CAACX,UAAV,CAAqBY,MAArB,eAA4B;AAAgB,YAAA,OAAO,EAAE,MAAM,KAAKL,WAAL,CAAiBG,CAAC,CAACG,QAAF,EAAjB,CAA/B;AAAA,kCAAuEH,CAAvE;AAAA,aAAaA,CAAb;AAAA;AAAA;AAAA;AAAA,kBAA5B;AAAb,SAAhB,CAAd;AACD;AACF,KAhCyB;AAAA;;AAkC1BI,EAAAA,MAAM,GAAG;AAEPC,IAAAA,OAAO,CAACC,GAAR,CAAY,KAAKC,KAAL,CAAWC,OAAvB;AACA,wBACE;AAAA,gBACG,KAAKpB,KAAL,CAAWE;AADd;AAAA;AAAA;AAAA;AAAA,YADF;AAOD;;AA5CyB;;AA+C5B,MAAMmB,eAAe,GAAGrB,KAAK,IAAI;AAC/BiB,EAAAA,OAAO,CAACC,GAAR,CAAYlB,KAAZ;AACA,SAAM;AACJoB,IAAAA,OAAO,EAAEpB,KAAK,CAACoB,OADX;AAEJE,IAAAA,KAAK,EAAEtB,KAAK,CAACsB,KAFT;AAGJC,IAAAA,OAAO,EAAEvB,KAAK,CAACuB,OAHX;AAIJC,IAAAA,OAAO,EAAExB,KAAK,CAACwB;AAJX,GAAN;AAMD,CARD;;AAUA,eAAe7B,OAAO,CAAC0B,eAAD,EAAkB;AAACxB,EAAAA,UAAD;AAAaD,EAAAA;AAAb,CAAlB,CAAP,CAAiDG,GAAjD,CAAf,C,CAEA","sourcesContent":["\nimport { Component } from 'react';\nimport { connect } from 'react-redux';\nimport { getTexts } from './actions/text/textsAxiosCallAction';\nimport { getScripts } from './actions/script/scriptAxiosCallAction';\n\n\n// import Script1List from './components/scripts/script1/componentlist';\n// import Script2List from './components/scripts/script2/componentlist';\n// import Script3List from './components/scripts/script3/componentlist';\n// import Script4List from './components/scripts/script4/componentlist';\n// import Script5List from './components/scripts/script5/componentlist';\n// import Script6List from './components/scripts/script6/componentlist';\n// import Script7List from './components/scripts/script7/componentlist';\n// import Script8List from './components/scripts/script8/componentlist';\n// import Script9List from './components/scripts/script9/componentlist';\n// import Script10List from './components/scripts/script10/componentlist';\n// import Script11List from './components/scripts/script11/componentlist';\n// import Script12List from './components/scripts/script12/componentlist';\n// import Script13List from './components/scripts/script13/componentlist';\n// import Users from './components/users/users.js';\nimport ScriptDummyList from './components/scripts/dummy script/componentlist';\n\n\nclass App extends Component {\n  \n  state = {\n    componentList: [<ScriptDummyList />], buttonList: [], allPages: {}, allTexts: {}, scriptDataIsReturned: false, textDataIsReturned: false\n  }\n\n  \n\n  componentDidMount = () => {\n    this.makeButtons();\n    // this.props.getTexts();\n    // this.props.getScript();\n  }\n\n  handleClick = (script_number) => {//Once a button is clicked, it takes you to the coresponding component\n    this.setState({buttonList: null});\n    // this.store.dispatch({\n    //   type: 'SCRIPT_PICKED',\n    //   script_number: script_number\n    // })\n    // this.store.dispatch({\n    //   type: 'TEXTS_FROM_SCRIPT',\n    //   script_number: script_number\n    // })\n    \n  }\n\n\n  makeButtons = () => {//Makes the button list depending on the componenents present in the componenet list\n    for (let i = 1; i < 14; i++){\n      this.setState((prevstate) => ({buttonList: prevstate.buttonList.concat(<button key={i} onClick={() => this.handleClick(i.toString())}>Script {i}</button>)}));\n    } \n  }\n\n  render() {\n    \n    console.log(this.props.scripts)\n    return(\n      <div>\n        {this.state.buttonList}\n        {/* What goes here is what will be pulled from our store */}\n      </div>\n      \n    )\n  } \n}\n\nconst mapStateToProps = state => {\n  console.log(state)\n  return{\n    scripts: state.scripts,\n    texts: state.texts,\n    loading: state.loading,\n    clicked: state.clicked \n  }\n}\n\nexport default connect(mapStateToProps, {getScripts, getTexts})(App);\n\n//<Script1List />, <Script2List />, <Script3List />, <Script4List />, <Script5List />, <Script6List />, <Script7List />, <Script8List />, <Script9List />, <Script10List />, <Script11List />, <Script12List />, <Script13List />\n\n\n"]},"metadata":{},"sourceType":"module"}