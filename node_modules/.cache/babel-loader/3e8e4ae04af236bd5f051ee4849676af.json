{"ast":null,"code":"var _jsxFileName = \"/mnt/c/Users/moust/Documents/Scripts/frontend/src/components/scripts/dummy script/pages/generalpage.js\";\nimport { Component } from 'react';\nimport ContentEditable from 'react-contenteditable';\nimport { connect } from 'react-redux';\nimport { submitButtonClicked } from '../../../../actions/pages/contentEditableOrSubmitClicked';\nimport '../../allscripts.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nclass GeneralPageRenderer extends Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      page: null,\n      page_content: null,\n      submitButton: null,\n      pageNum: 1\n    };\n\n    this.handleContentClicked = event => {\n      this.setState({\n        submitButton: /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: event => this.handleSubmit(),\n          className: \"website_change_submit_button\",\n          children: \"Submit Changes\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 27,\n          columnNumber: 38\n        }, this)\n      });\n    };\n\n    this.handleSubmit = event => {\n      event.preventDefault();\n      this.props.submitButtonClicked({\n        page: this.state.page,\n        content: this.state.page_content\n      });\n      this.setState({\n        submitButton: null\n      });\n    };\n\n    this.handleChangeInContentEditable = event => {\n      this.setState({\n        content: event.target.value\n      });\n    };\n  }\n\n  componentDidMount() {\n    console.log(this.props); //For now, this is set. In the future, we will need to convey some way to suggest that something is changing and thus we will need to \n    //Account for that by way of a reducer/action\n\n    const pageData = this.props.pages.find(page_data => {\n      return page_data.page_number === this.state.pageNum.toString();\n    });\n    console.log(pageData);\n    this.setState({\n      page: pageData,\n      page_content: pageData.content\n    });\n  }\n\n  render() {\n    if (this.state.content === null) {\n      return /*#__PURE__*/_jsxDEV(\"h1\", {\n        children: \"Loading\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 42,\n        columnNumber: 17\n      }, this);\n    }\n\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(ContentEditable, {\n        onClick: event => this.handleContentClicked(),\n        onChange: event => this.handleChangeInContentEditable(event),\n        html: this.state.page_content\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 47,\n        columnNumber: 17\n      }, this), this.state.submitButton]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 46,\n      columnNumber: 13\n    }, this);\n  }\n\n}\n\nfunction mapDispatchToProps(dispatch) {\n  return {\n    submitButtonClicked: page_details => dispatch(submitButtonClicked(page_details))\n  };\n}\n\nexport default connect(mapDispatchToProps)(GeneralPageRenderer);","map":{"version":3,"sources":["/mnt/c/Users/moust/Documents/Scripts/frontend/src/components/scripts/dummy script/pages/generalpage.js"],"names":["Component","ContentEditable","connect","submitButtonClicked","GeneralPageRenderer","state","page","page_content","submitButton","pageNum","handleContentClicked","event","setState","handleSubmit","preventDefault","props","content","handleChangeInContentEditable","target","value","componentDidMount","console","log","pageData","pages","find","page_data","page_number","toString","render","mapDispatchToProps","dispatch","page_details"],"mappings":";AAAA,SAAQA,SAAR,QAAwB,OAAxB;AACA,OAAOC,eAAP,MAA4B,uBAA5B;AAEA,SAASC,OAAT,QAAwB,aAAxB;AAEA,SAASC,mBAAT,QAAoC,0DAApC;AACA,OAAO,sBAAP;;;AAEA,MAAMC,mBAAN,SAAkCJ,SAAlC,CAA2C;AAAA;AAAA;AAAA,SAEvCK,KAFuC,GAE/B;AACJC,MAAAA,IAAI,EAAE,IADF;AAEJC,MAAAA,YAAY,EAAE,IAFV;AAGJC,MAAAA,YAAY,EAAE,IAHV;AAIJC,MAAAA,OAAO,EAAE;AAJL,KAF+B;;AAAA,SAiBvCC,oBAjBuC,GAiBfC,KAAD,IAAW;AAC9B,WAAKC,QAAL,CAAc;AAACJ,QAAAA,YAAY,eAAE;AAAQ,UAAA,OAAO,EAAEG,KAAK,IAAI,KAAKE,YAAL,EAA1B;AAA+C,UAAA,SAAS,EAAC,8BAAzD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAf,OAAd;AACH,KAnBsC;;AAAA,SAqBvCA,YArBuC,GAqBvBF,KAAD,IAAW;AACtBA,MAAAA,KAAK,CAACG,cAAN;AACA,WAAKC,KAAL,CAAWZ,mBAAX,CAA+B;AAACG,QAAAA,IAAI,EAAE,KAAKD,KAAL,CAAWC,IAAlB;AAAwBU,QAAAA,OAAO,EAAE,KAAKX,KAAL,CAAWE;AAA5C,OAA/B;AACA,WAAKK,QAAL,CAAc;AAACJ,QAAAA,YAAY,EAAE;AAAf,OAAd;AACH,KAzBsC;;AAAA,SA0BvCS,6BA1BuC,GA0BNN,KAAD,IAAW;AACvC,WAAKC,QAAL,CAAc;AAACI,QAAAA,OAAO,EAAEL,KAAK,CAACO,MAAN,CAAaC;AAAvB,OAAd;AACH,KA5BsC;AAAA;;AAQvCC,EAAAA,iBAAiB,GAAE;AACfC,IAAAA,OAAO,CAACC,GAAR,CAAY,KAAKP,KAAjB,EADe,CAEf;AACA;;AACA,UAAMQ,QAAQ,GAAG,KAAKR,KAAL,CAAWS,KAAX,CAAiBC,IAAjB,CAAsBC,SAAS,IAAI;AAAC,aAAOA,SAAS,CAACC,WAAV,KAA0B,KAAKtB,KAAL,CAAWI,OAAX,CAAmBmB,QAAnB,EAAjC;AAA+D,KAAnG,CAAjB;AACAP,IAAAA,OAAO,CAACC,GAAR,CAAYC,QAAZ;AACA,SAAKX,QAAL,CAAc;AAACN,MAAAA,IAAI,EAAEiB,QAAP;AAAiBhB,MAAAA,YAAY,EAAEgB,QAAQ,CAACP;AAAxC,KAAd;AACH;;AAeDa,EAAAA,MAAM,GAAE;AACJ,QAAI,KAAKxB,KAAL,CAAWW,OAAX,KAAuB,IAA3B,EAAgC;AAC5B,0BACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cADJ;AAGH;;AACD,wBACI;AAAA,8BACI,QAAC,eAAD;AAAiB,QAAA,OAAO,EAAEL,KAAK,IAAI,KAAKD,oBAAL,EAAnC;AAAgE,QAAA,QAAQ,EAAEC,KAAK,IAAI,KAAKM,6BAAL,CAAmCN,KAAnC,CAAnF;AACA,QAAA,IAAI,EAAE,KAAKN,KAAL,CAAWE;AADjB;AAAA;AAAA;AAAA;AAAA,cADJ,EAGK,KAAKF,KAAL,CAAWG,YAHhB;AAAA;AAAA;AAAA;AAAA;AAAA,YADJ;AAOH;;AA3CsC;;AA8C3C,SAASsB,kBAAT,CAA4BC,QAA5B,EAAsC;AAClC,SAAO;AACH5B,IAAAA,mBAAmB,EAAG6B,YAAD,IAAkBD,QAAQ,CAAC5B,mBAAmB,CAAC6B,YAAD,CAApB;AAD5C,GAAP;AAGH;;AAID,eAAe9B,OAAO,CAAC4B,kBAAD,CAAP,CAA4B1B,mBAA5B,CAAf","sourcesContent":["import {Component} from 'react';\r\nimport ContentEditable from 'react-contenteditable';\r\n\r\nimport { connect } from 'react-redux';\r\n\r\nimport { submitButtonClicked } from '../../../../actions/pages/contentEditableOrSubmitClicked';\r\nimport '../../allscripts.css';\r\n\r\nclass GeneralPageRenderer extends Component{\r\n    \r\n    state = {\r\n        page: null,\r\n        page_content: null,\r\n        submitButton: null,\r\n        pageNum: 1\r\n    }\r\n    componentDidMount(){\r\n        console.log(this.props)\r\n        //For now, this is set. In the future, we will need to convey some way to suggest that something is changing and thus we will need to \r\n        //Account for that by way of a reducer/action\r\n        const pageData = this.props.pages.find(page_data => {return page_data.page_number === this.state.pageNum.toString()})\r\n        console.log(pageData);\r\n        this.setState({page: pageData, page_content: pageData.content})\r\n    }\r\n\r\n    handleContentClicked = (event) => {\r\n        this.setState({submitButton: <button onClick={event => this.handleSubmit()} className=\"website_change_submit_button\">Submit Changes</button>})\r\n    }\r\n\r\n    handleSubmit = (event) => {\r\n        event.preventDefault();\r\n        this.props.submitButtonClicked({page: this.state.page, content: this.state.page_content});\r\n        this.setState({submitButton: null})\r\n    }\r\n    handleChangeInContentEditable = (event) => {\r\n        this.setState({content: event.target.value})\r\n    }\r\n\r\n    render(){\r\n        if (this.state.content === null){\r\n            return(\r\n                <h1>Loading</h1>\r\n            )\r\n        }\r\n        return(\r\n            <div>\r\n                <ContentEditable onClick={event => this.handleContentClicked()} onChange={event => this.handleChangeInContentEditable(event)}\r\n                html={this.state.page_content} />\r\n                {this.state.submitButton}\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nfunction mapDispatchToProps(dispatch) {\r\n    return({\r\n        submitButtonClicked: (page_details) => dispatch(submitButtonClicked(page_details))\r\n    })\r\n}\r\n\r\n\r\n\r\nexport default connect(mapDispatchToProps)(GeneralPageRenderer);"]},"metadata":{},"sourceType":"module"}