{"ast":null,"code":"var _jsxFileName = \"/mnt/c/Users/moust/Documents/Scripts/frontend/src/App.js\";\nimport { Component } from 'react';\nimport { connect } from 'react-redux';\nimport { getTexts, changeTexts } from './actions/text';\nimport { userLogout, autoLogin } from './actions/user';\nimport { flushMenteeList } from './actions/mentee';\nimport hamburgerMenu from \"./components/scripts/pictures/hamburger_menu.png\";\nimport './App.css';\nimport Script1List from './components/scripts/script1/componentlist';\nimport Script2List from './components/scripts/script2/componentlist';\nimport Script3List from './components/scripts/script3/componentlist';\nimport Script4List from './components/scripts/script4/componentlist';\nimport Script5List from './components/scripts/script5/componentlist';\nimport Script6List from './components/scripts/script6/componentlist';\nimport Script7List from './components/scripts/script7/componentlist';\nimport Script8List from './components/scripts/script8/componentlist';\nimport Script9List from './components/scripts/script9/componentlist';\nimport Script10List from './components/scripts/script10/componentlist';\nimport Script11List from './components/scripts/script11/componentlist';\nimport Script12List from './components/scripts/script12/componentlist';\nimport Script13List from './components/scripts/script13/componentlist';\nimport Users from './components/users/users.js';\nimport DisplayMentees from './components/mentees/displayMentees'; // import ScriptDummyList from './components/scripts/dummy script/componentlist';\n\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nclass App extends Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      componentList: [/*#__PURE__*/_jsxDEV(Script1List, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 32,\n        columnNumber: 21\n      }, this), /*#__PURE__*/_jsxDEV(Script2List, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 32,\n        columnNumber: 38\n      }, this), /*#__PURE__*/_jsxDEV(Script3List, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 32,\n        columnNumber: 55\n      }, this), /*#__PURE__*/_jsxDEV(Script4List, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 32,\n        columnNumber: 72\n      }, this), /*#__PURE__*/_jsxDEV(Script5List, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 32,\n        columnNumber: 89\n      }, this), /*#__PURE__*/_jsxDEV(Script6List, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 32,\n        columnNumber: 106\n      }, this), /*#__PURE__*/_jsxDEV(Script7List, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 32,\n        columnNumber: 123\n      }, this), /*#__PURE__*/_jsxDEV(Script8List, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 32,\n        columnNumber: 140\n      }, this), /*#__PURE__*/_jsxDEV(Script9List, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 32,\n        columnNumber: 157\n      }, this), /*#__PURE__*/_jsxDEV(Script10List, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 32,\n        columnNumber: 174\n      }, this), /*#__PURE__*/_jsxDEV(Script11List, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 32,\n        columnNumber: 192\n      }, this), /*#__PURE__*/_jsxDEV(Script12List, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 32,\n        columnNumber: 210\n      }, this), /*#__PURE__*/_jsxDEV(Script13List, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 32,\n        columnNumber: 228\n      }, this)],\n      currComponent: null,\n      buttonList: [],\n      hamburger_is_clicked: false,\n      options: ''\n    };\n\n    this.componentDidMount = () => {\n      if (localStorage.getItem(\"token\")) {\n        this.props.autoLogin();\n      }\n\n      this.makeButtons();\n    };\n\n    this.hamburgerClick = event => {\n      if (this.state.hamburger_is_clicked === true) {\n        this.setState({\n          hamburger_is_clicked: false,\n          options: ''\n        });\n      } else if (this.state.hamburger_is_clicked === false) {\n        this.setState({\n          hamburger_is_clicked: true,\n          options: /*#__PURE__*/_jsxDEV(\"div\", {\n            children: [/*#__PURE__*/_jsxDEV(\"p\", {\n              onClick: event => this.menuItemHandleClick(event, 1),\n              children: \"Change Script\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 55,\n              columnNumber: 13\n            }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n              onClick: event => this.menuItemHandleClick(event, 2),\n              children: \"Logout\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 56,\n              columnNumber: 13\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 54,\n            columnNumber: 9\n          }, this)\n        });\n      }\n    };\n\n    this.menuItemHandleClick = (e, choice) => {\n      //For the hamburger menu\n      if (choice === 1) {\n        this.makeButtons();\n        this.props.changeTexts();\n      } else if (choice === 2) {\n        this.setState({\n          hamburger_is_clicked: false,\n          options: ''\n        });\n        this.props.userLogout();\n      }\n    };\n\n    this.handleClick = script_number => {\n      //Once a button is clicked, it takes you to the coresponding component\n      this.setState({\n        buttonList: null\n      });\n      this.setState({\n        currComponent: this.state.componentList[script_number]\n      });\n      this.props.getTexts(script_number);\n    };\n\n    this.makeButtons = () => {\n      //Makes the button list depending on the componenents present in the componenet list\n      for (let i = 1; i < 14; i++) {\n        this.setState(prevstate => ({\n          buttonList: prevstate.buttonList.concat( /*#__PURE__*/_jsxDEV(\"button\", {\n            onClick: () => this.handleClick((i - 1).toString()),\n            children: [\"Script \", i]\n          }, i - 1, true, {\n            fileName: _jsxFileName,\n            lineNumber: 84,\n            columnNumber: 78\n          }, this))\n        }));\n      }\n    };\n  }\n\n  render() {\n    if (localStorage.getItem(\"token\")) {\n      if (this.props.texts_loading) {\n        return /*#__PURE__*/_jsxDEV(\"h1\", {\n          children: \"Loading\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 93,\n          columnNumber: 11\n        }, this);\n      } else if (this.props.mentees.current_mentee_id === -1) {\n        if (this.props.mentees.mentees === null) {\n          return /*#__PURE__*/_jsxDEV(\"h1\", {\n            children: \"Loading\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 98,\n            columnNumber: 18\n          }, this);\n        } else {\n          return /*#__PURE__*/_jsxDEV(DisplayMentees, {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 102,\n            columnNumber: 13\n          }, this);\n        }\n      } else if (this.props.texts.curatedTextsFromCurrentScript === null) {\n        return /*#__PURE__*/_jsxDEV(\"div\", {\n          children: this.state.buttonList\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 109,\n          columnNumber: 11\n        }, this);\n      } else {\n        return /*#__PURE__*/_jsxDEV(\"div\", {\n          children: [this.state.currComponent, /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"hamburger_menu_div\",\n            children: [/*#__PURE__*/_jsxDEV(\"img\", {\n              className: this.state.hamburger_is_clicked ? \"rotate\" : \"no_rotate\",\n              src: hamburgerMenu,\n              alt: \"Hamburger menu icon\",\n              onClick: event => this.hamburgerClick(event)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 119,\n              columnNumber: 19\n            }, this), this.state.options]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 118,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 116,\n          columnNumber: 11\n        }, this);\n      }\n    } else {\n      return /*#__PURE__*/_jsxDEV(Users, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 129,\n        columnNumber: 9\n      }, this);\n    }\n  }\n\n}\n\nconst mapStateToProps = state => {\n  return {\n    pages: state.pages,\n    texts: state.texts,\n    user: state.user,\n    mentees: state.mentees,\n    texts_loading: state.texts.loading\n  };\n};\n\nconst mapDispatchToProps = dispatch => {\n  return {\n    getTexts: script_number => dispatch(getTexts(script_number)),\n    changeTexts: () => dispatch(changeTexts()),\n    userLogout: () => dispatch(userLogout()),\n    flushMenteeList: () => dispatch(flushMenteeList()),\n    autoLogin: () => dispatch(autoLogin())\n  };\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(App);","map":{"version":3,"sources":["/mnt/c/Users/moust/Documents/Scripts/frontend/src/App.js"],"names":["Component","connect","getTexts","changeTexts","userLogout","autoLogin","flushMenteeList","hamburgerMenu","Script1List","Script2List","Script3List","Script4List","Script5List","Script6List","Script7List","Script8List","Script9List","Script10List","Script11List","Script12List","Script13List","Users","DisplayMentees","App","state","componentList","currComponent","buttonList","hamburger_is_clicked","options","componentDidMount","localStorage","getItem","props","makeButtons","hamburgerClick","event","setState","menuItemHandleClick","e","choice","handleClick","script_number","i","prevstate","concat","toString","render","texts_loading","mentees","current_mentee_id","texts","curatedTextsFromCurrentScript","mapStateToProps","pages","user","loading","mapDispatchToProps","dispatch"],"mappings":"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","sourcesContent":["import { Component } from 'react';\nimport { connect } from 'react-redux';\nimport { getTexts, changeTexts } from './actions/text';\nimport { userLogout, autoLogin } from './actions/user';\nimport { flushMenteeList } from './actions/mentee';\n\nimport hamburgerMenu from \"./components/scripts/pictures/hamburger_menu.png\";\nimport './App.css';\n\nimport Script1List from './components/scripts/script1/componentlist';\nimport Script2List from './components/scripts/script2/componentlist';\nimport Script3List from './components/scripts/script3/componentlist';\nimport Script4List from './components/scripts/script4/componentlist';\nimport Script5List from './components/scripts/script5/componentlist';\nimport Script6List from './components/scripts/script6/componentlist';\nimport Script7List from './components/scripts/script7/componentlist';\nimport Script8List from './components/scripts/script8/componentlist';\nimport Script9List from './components/scripts/script9/componentlist';\nimport Script10List from './components/scripts/script10/componentlist';\nimport Script11List from './components/scripts/script11/componentlist';\nimport Script12List from './components/scripts/script12/componentlist';\nimport Script13List from './components/scripts/script13/componentlist';\n\nimport Users from './components/users/users.js';\nimport DisplayMentees from './components/mentees/displayMentees';\n// import ScriptDummyList from './components/scripts/dummy script/componentlist';\n\n\nclass App extends Component {\n  \n  state = {\n    componentList: [<Script1List />, <Script2List />, <Script3List />, <Script4List />, <Script5List />, <Script6List />, <Script7List />, <Script8List />, <Script9List />, <Script10List />, <Script11List />, <Script12List />, <Script13List />], \n    currComponent: null,\n    buttonList: [],\n    hamburger_is_clicked: false,\n    options: ''\n  }\n\n  componentDidMount = () => {\n    if (localStorage.getItem(\"token\")){\n      this.props.autoLogin();\n    }\n    this.makeButtons();\n  }\n\n  hamburgerClick = (event) => {\n    if (this.state.hamburger_is_clicked === true){\n        this.setState({hamburger_is_clicked: false, options: ''})\n    }\n  \n    else if (this.state.hamburger_is_clicked === false){\n        this.setState({hamburger_is_clicked: true,\n        options: \n        <div>\n            <p onClick={event => this.menuItemHandleClick(event, 1)}>Change Script</p>\n            <p onClick={event => this.menuItemHandleClick(event, 2)}>Logout</p>\n        </div>\n    })\n    }\n  }\n  \n  menuItemHandleClick = (e, choice) => {\n    //For the hamburger menu\n    if (choice === 1){\n      this.makeButtons();\n      this.props.changeTexts();\n    }\n    else if (choice === 2){\n      this.setState({hamburger_is_clicked: false, options: ''})\n      this.props.userLogout();\n    }\n     \n  }\n\n  handleClick = (script_number) => {//Once a button is clicked, it takes you to the coresponding component\n    this.setState({buttonList: null});\n    this.setState({currComponent: this.state.componentList[script_number]})\n    this.props.getTexts(script_number);\n  }\n\n\n  makeButtons = () => {//Makes the button list depending on the componenents present in the componenet list\n    for (let i = 1; i < 14; i++){\n      this.setState((prevstate) => ({buttonList: prevstate.buttonList.concat(<button key={i-1} onClick={() => this.handleClick((i-1).toString())}>Script {i}</button>)}));\n    } \n    \n  }\n\n  render() {\n    if (localStorage.getItem(\"token\")){\n      if ((this.props.texts_loading)){\n        return(\n          <h1>Loading</h1>\n        )\n      }\n      else if (this.props.mentees.current_mentee_id === -1){\n        if (this.props.mentees.mentees === null){\n          return(<h1>Loading</h1>)\n        }\n        else{\n          return(\n            <DisplayMentees />\n          )\n        }\n      }\n\n      else if ((this.props.texts.curatedTextsFromCurrentScript === null)){\n        return (\n          <div>\n            {this.state.buttonList}\n          </div>\n        )\n      }\n      else{\n        return(\n          <div>\n            {this.state.currComponent}\n            <div className=\"hamburger_menu_div\">\n                  <img className={this.state.hamburger_is_clicked ? \"rotate\" : \"no_rotate\"} src={hamburgerMenu} alt=\"Hamburger menu icon\" onClick={(event) => this.hamburgerClick(event)} />\n                  {this.state.options}\n            </div>\n          </div>\n          \n        )\n      }\n    }\n    else{\n      return(\n        <Users />\n        )\n      }\n  }\n} \n\n\nconst mapStateToProps = state => {\n  return{\n    pages: state.pages,\n    texts: state.texts,\n    user: state.user,\n    mentees: state.mentees,\n    texts_loading: state.texts.loading,\n  }\n}\n\nconst mapDispatchToProps = dispatch => {\n  return{\n      getTexts: (script_number) => dispatch(getTexts(script_number)),\n      changeTexts: () => dispatch(changeTexts()),\n      userLogout: () => dispatch(userLogout()),\n      flushMenteeList: () => dispatch(flushMenteeList()),\n      autoLogin: () => dispatch(autoLogin())\n  }\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(App);\n"]},"metadata":{},"sourceType":"module"}