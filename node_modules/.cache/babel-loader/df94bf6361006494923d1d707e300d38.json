{"ast":null,"code":"import axios from 'axios';\nexport const postTexts = data => dispatch => {\n  axios.post(\"http://localhost:3001/texts\", {\n    value: data.value,\n    id_tag: data.id_tag,\n    script: data.script\n  });\n};\nexport const postOrPatchTexts = data => dispatch => {\n  console.log(data);\n\n  if (data in this.state.text) {\n    axios.patch(`http://localhost:3001/texts/${this.state.text[event.target.id].id}`, {\n      value: event.target.value,\n      id_tag: event.target.id,\n      script: \"dummy\"\n    });\n  } else {}\n\n  axios.patch(`http://localhost:3001/pages/${data.page.id}`, {\n    content: data.content\n  });\n};\nexport const TEXTS_LOADING = \"LOADING\";\nexport const TEXTS_SUCCESS = \"SUCCESS\";\nexport const FAILURE = \"FAILURE\";\nexport const getTexts = script_number => dispatch => {\n  dispatch({\n    type: TEXTS_LOADING\n  });\n  axios.get('http://localhost:3001/texts').then(res => dispatch({\n    type: TEXTS_SUCCESS,\n    payload: res.data.filter(text_data => text_data.script === script_number)\n  })).catch(err => dispatch({\n    type: FAILURE,\n    payload: err\n  }));\n};\nexport const changeTexts = () => dispatch => {\n  dispatch({\n    type: 'CHANGE_SCRIPT'\n  });\n};","map":{"version":3,"sources":["/mnt/c/Users/moust/Documents/Scripts/frontend/src/actions/text.js"],"names":["axios","postTexts","data","dispatch","post","value","id_tag","script","postOrPatchTexts","console","log","state","text","patch","event","target","id","page","content","TEXTS_LOADING","TEXTS_SUCCESS","FAILURE","getTexts","script_number","type","get","then","res","payload","filter","text_data","catch","err","changeTexts"],"mappings":"AAAA,OAAOA,KAAP,MAAkB,OAAlB;AAGA,OAAO,MAAMC,SAAS,GAAIC,IAAD,IAAUC,QAAQ,IAAI;AAC7CH,EAAAA,KAAK,CAACI,IAAN,CAAW,6BAAX,EAA0C;AAACC,IAAAA,KAAK,EAAEH,IAAI,CAACG,KAAb;AAAoBC,IAAAA,MAAM,EAAEJ,IAAI,CAACI,MAAjC;AAAyCC,IAAAA,MAAM,EAAEL,IAAI,CAACK;AAAtD,GAA1C;AACD,CAFM;AAIP,OAAO,MAAMC,gBAAgB,GAAIN,IAAD,IAAUC,QAAQ,IAAI;AAClDM,EAAAA,OAAO,CAACC,GAAR,CAAYR,IAAZ;;AACA,MAAIA,IAAI,IAAI,KAAKS,KAAL,CAAWC,IAAvB,EAA4B;AACxBZ,IAAAA,KAAK,CAACa,KAAN,CAAa,+BAA8B,KAAKF,KAAL,CAAWC,IAAX,CAAgBE,KAAK,CAACC,MAAN,CAAaC,EAA7B,EAAiCA,EAAG,EAA/E,EAAkF;AAACX,MAAAA,KAAK,EAAES,KAAK,CAACC,MAAN,CAAaV,KAArB;AAA4BC,MAAAA,MAAM,EAAEQ,KAAK,CAACC,MAAN,CAAaC,EAAjD;AAAqDT,MAAAA,MAAM,EAAE;AAA7D,KAAlF;AACP,GAFG,MAGK,CAEJ;;AACDP,EAAAA,KAAK,CAACa,KAAN,CAAa,+BAA8BX,IAAI,CAACe,IAAL,CAAUD,EAAG,EAAxD,EAA2D;AAACE,IAAAA,OAAO,EAAEhB,IAAI,CAACgB;AAAf,GAA3D;AACH,CATM;AAWP,OAAO,MAAMC,aAAa,GAAG,SAAtB;AACP,OAAO,MAAMC,aAAa,GAAG,SAAtB;AACP,OAAO,MAAMC,OAAO,GAAG,SAAhB;AAEP,OAAO,MAAMC,QAAQ,GAAIC,aAAD,IAAmBpB,QAAQ,IAAI;AACnDA,EAAAA,QAAQ,CAAC;AAAEqB,IAAAA,IAAI,EAAEL;AAAR,GAAD,CAAR;AACAnB,EAAAA,KAAK,CAACyB,GAAN,CAAU,6BAAV,EACGC,IADH,CACQC,GAAG,IAAIxB,QAAQ,CAAC;AAAEqB,IAAAA,IAAI,EAAEJ,aAAR;AAAuBQ,IAAAA,OAAO,EAAED,GAAG,CAACzB,IAAJ,CAAS2B,MAAT,CAAgBC,SAAS,IAAIA,SAAS,CAACvB,MAAV,KAAqBgB,aAAlD;AAAhC,GAAD,CADvB,EAEGQ,KAFH,CAESC,GAAG,IAAI7B,QAAQ,CAAC;AAAEqB,IAAAA,IAAI,EAAEH,OAAR;AAAiBO,IAAAA,OAAO,EAAEI;AAA1B,GAAD,CAFxB;AAGH,CALM;AAOP,OAAO,MAAMC,WAAW,GAAG,MAAM9B,QAAQ,IAAI;AACzCA,EAAAA,QAAQ,CAAC;AAAEqB,IAAAA,IAAI,EAAE;AAAR,GAAD,CAAR;AACD,CAFI","sourcesContent":["import axios from 'axios';\r\n\r\n\r\nexport const postTexts = (data) => dispatch => {\r\n  axios.post(\"http://localhost:3001/texts\", {value: data.value, id_tag: data.id_tag, script: data.script })\r\n}\r\n\r\nexport const postOrPatchTexts = (data) => dispatch => {\r\n    console.log(data)\r\n    if (data in this.state.text){\r\n        axios.patch(`http://localhost:3001/texts/${this.state.text[event.target.id].id}`, {value: event.target.value, id_tag: event.target.id, script: \"dummy\"})\r\n}\r\n    else {\r\n        \r\n    }\r\n    axios.patch(`http://localhost:3001/pages/${data.page.id}`, {content: data.content})\r\n}\r\n\r\nexport const TEXTS_LOADING = \"LOADING\";\r\nexport const TEXTS_SUCCESS = \"SUCCESS\";\r\nexport const FAILURE = \"FAILURE\";\r\n\r\nexport const getTexts = (script_number) => dispatch => {\r\n    dispatch({ type: TEXTS_LOADING })\r\n    axios.get('http://localhost:3001/texts')\r\n      .then(res => dispatch({ type: TEXTS_SUCCESS, payload: res.data.filter(text_data => text_data.script === script_number)}))\r\n      .catch(err => dispatch({ type: FAILURE, payload: err}))\r\n}\r\n\r\nexport const changeTexts = () => dispatch => {\r\n    dispatch({ type: 'CHANGE_SCRIPT' })\r\n  }\r\n"]},"metadata":{},"sourceType":"module"}