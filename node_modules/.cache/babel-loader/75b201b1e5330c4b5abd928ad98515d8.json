{"ast":null,"code":"import axios from \"axios\";\nexport const userSignupAndCheck = user_data => dispatch => {\n  axios.post(\"http://localhost:3001/users\", {\n    username: user_data.username,\n    email: user_data.email,\n    password: user_data.password,\n    password_confirmation: user_data.password_confirmation\n  }).then(response => {\n    if (response.data.errors) {\n      dispatch({\n        type: 'ERRORS_FOUND',\n        payload: response.data.errors\n      });\n    } else {\n      dispatch({\n        type: 'USER_SUCCESS',\n        payload: response.data.jwt\n      });\n    }\n  });\n};","map":{"version":3,"sources":["/mnt/c/Users/moust/Documents/Scripts/frontend/src/actions/users/userSignup.js"],"names":["axios","userSignupAndCheck","user_data","dispatch","post","username","email","password","password_confirmation","then","response","data","errors","type","payload","jwt"],"mappings":"AAAA,OAAOA,KAAP,MAAkB,OAAlB;AAEA,OAAO,MAAMC,kBAAkB,GAAIC,SAAD,IAAeC,QAAQ,IAAI;AACzDH,EAAAA,KAAK,CAACI,IAAN,CAAW,6BAAX,EAA0C;AAACC,IAAAA,QAAQ,EAAEH,SAAS,CAACG,QAArB;AAA+BC,IAAAA,KAAK,EAAEJ,SAAS,CAACI,KAAhD;AAAuDC,IAAAA,QAAQ,EAAEL,SAAS,CAACK,QAA3E;AAAqFC,IAAAA,qBAAqB,EAAEN,SAAS,CAACM;AAAtH,GAA1C,EACCC,IADD,CACMC,QAAQ,IAAI;AACd,QAAIA,QAAQ,CAACC,IAAT,CAAcC,MAAlB,EAAyB;AACrBT,MAAAA,QAAQ,CAAC;AAAEU,QAAAA,IAAI,EAAE,cAAR;AAAwBC,QAAAA,OAAO,EAAEJ,QAAQ,CAACC,IAAT,CAAcC;AAA/C,OAAD,CAAR;AACH,KAFD,MAGK;AACDT,MAAAA,QAAQ,CAAC;AAACU,QAAAA,IAAI,EAAE,cAAP;AAAuBC,QAAAA,OAAO,EAAEJ,QAAQ,CAACC,IAAT,CAAcI;AAA9C,OAAD,CAAR;AACH;AACJ,GARD;AASH,CAVM","sourcesContent":["import axios from \"axios\";\r\n\r\nexport const userSignupAndCheck = (user_data) => dispatch => {\r\n    axios.post(\"http://localhost:3001/users\", {username: user_data.username, email: user_data.email, password: user_data.password, password_confirmation: user_data.password_confirmation})\r\n    .then(response => {\r\n        if (response.data.errors){\r\n            dispatch({ type: 'ERRORS_FOUND', payload: response.data.errors});\r\n        }\r\n        else {\r\n            dispatch({type: 'USER_SUCCESS', payload: response.data.jwt})\r\n        }\r\n    })\r\n} \r\n\r\n"]},"metadata":{},"sourceType":"module"}