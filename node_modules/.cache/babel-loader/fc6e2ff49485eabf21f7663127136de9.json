{"ast":null,"code":"var _jsxFileName = \"/mnt/c/Users/moust/Documents/Scripts/frontend/src/components/scripts/dummy script/pages/generalpage.js\",\n    _s = $RefreshSig$();\n\nimport { useState, useEffect } from 'react';\nimport axios from 'axios';\nimport parse from 'html-react-parser';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst GeneralPageRenderer = props => {\n  _s();\n\n  //   const [isEditingField, setIsEditingField] = useState(false)\n  const [content, setContent] = useState('');\n  const [pageNum, setPageNumber] = useState('');\n  const [script, setScript] = useState(''); //   const handleClick = (event) => {\n  //     setIsEditingField(!isEditingField)\n  //   }\n\n  const getSheets = () => {\n    axios.get(\"http://localhost:3001/scripts\").then(res => {\n      const scripts = res.data;\n\n      for (const script of scripts) {\n        if (script.script === \"dummy\" && script.page_number === \"1\") {\n          console.log(script);\n          break;\n        }\n      }\n    });\n  }; // const content_decipherer = (sheet) => {\n  //     setPageNumber(sheet.page_number);\n  //     setScript(sheet.script) ;\n  //     let sheetContentCopy = sheet.content;\n  //     sheetContentCopy = sheetContentCopy.split(',');\n  //     let bracketCount = 0;\n  //     console.log(sheetContentCopy);\n  //     for (const i of sheetContentCopy){\n  //         if (i.includes(\"type\")){\n  //             console.log(i);\n  //         }\n  //     }\n  // }\n\n\n  useEffect(() => {\n    getSheets();\n  });\n  return /*#__PURE__*/_jsxDEV(\"h1\", {\n    children: \"hi\"\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 49,\n    columnNumber: 7\n  }, this);\n};\n\n_s(GeneralPageRenderer, \"12qjL4XeJ/EYGyiNUPsm6doBgr4=\");\n\n_c = GeneralPageRenderer;\nexport default GeneralPageRenderer;\n\nvar _c;\n\n$RefreshReg$(_c, \"GeneralPageRenderer\");","map":{"version":3,"sources":["/mnt/c/Users/moust/Documents/Scripts/frontend/src/components/scripts/dummy script/pages/generalpage.js"],"names":["useState","useEffect","axios","parse","GeneralPageRenderer","props","content","setContent","pageNum","setPageNumber","script","setScript","getSheets","get","then","res","scripts","data","page_number","console","log"],"mappings":";;;AAAA,SAAQA,QAAR,EAAkBC,SAAlB,QAAkC,OAAlC;AACA,OAAOC,KAAP,MAAkB,OAAlB;AACA,OAAOC,KAAP,MAAkB,mBAAlB;;;AAEA,MAAMC,mBAAmB,GAAIC,KAAD,IAAW;AAAA;;AACvC;AACE,QAAM,CAACC,OAAD,EAAUC,UAAV,IAAwBP,QAAQ,CAAC,EAAD,CAAtC;AACA,QAAM,CAACQ,OAAD,EAAUC,aAAV,IAA2BT,QAAQ,CAAC,EAAD,CAAzC;AACA,QAAM,CAACU,MAAD,EAASC,SAAT,IAAsBX,QAAQ,CAAC,EAAD,CAApC,CAJqC,CAMvC;AACA;AACA;;AAEE,QAAMY,SAAS,GAAG,MAAM;AACpBV,IAAAA,KAAK,CAACW,GAAN,CAAU,+BAAV,EACCC,IADD,CACMC,GAAG,IAAI;AACT,YAAMC,OAAO,GAAGD,GAAG,CAACE,IAApB;;AACA,WAAK,MAAMP,MAAX,IAAqBM,OAArB,EAA6B;AACzB,YAAIN,MAAM,CAACA,MAAP,KAAkB,OAAlB,IAA6BA,MAAM,CAACQ,WAAP,KAAuB,GAAxD,EAA4D;AACxDC,UAAAA,OAAO,CAACC,GAAR,CAAYV,MAAZ;AACA;AACH;AACJ;AACR,KATG;AAUL,GAXC,CAVqC,CAuBnC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAIA;;;AAEFT,EAAAA,SAAS,CAAE,MAAM;AAACW,IAAAA,SAAS;AAAG,GAArB,CAAT;AAGA,sBACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,UADJ;AAGD,CA9CD;;GAAMR,mB;;KAAAA,mB;AAgDN,eAAeA,mBAAf","sourcesContent":["import {useState, useEffect} from 'react';\r\nimport axios from 'axios';\r\nimport parse from 'html-react-parser';\r\n\r\nconst GeneralPageRenderer = (props) => {\r\n//   const [isEditingField, setIsEditingField] = useState(false)\r\n  const [content, setContent] = useState('');\r\n  const [pageNum, setPageNumber] = useState('');\r\n  const [script, setScript] = useState('');\r\n\r\n//   const handleClick = (event) => {\r\n//     setIsEditingField(!isEditingField)\r\n//   }\r\n\r\n  const getSheets = () => {\r\n      axios.get(\"http://localhost:3001/scripts\")\r\n      .then(res => {\r\n          const scripts = res.data;\r\n          for (const script of scripts){\r\n              if (script.script === \"dummy\" && script.page_number === \"1\"){\r\n                  console.log(script)\r\n                  break \r\n              }\r\n          }\r\n  })\r\n}\r\n\r\n    // const content_decipherer = (sheet) => {\r\n    //     setPageNumber(sheet.page_number);\r\n    //     setScript(sheet.script) ;\r\n    //     let sheetContentCopy = sheet.content;\r\n    //     sheetContentCopy = sheetContentCopy.split(',');\r\n    //     let bracketCount = 0;\r\n    //     console.log(sheetContentCopy);\r\n    //     for (const i of sheetContentCopy){\r\n    //         if (i.includes(\"type\")){\r\n    //             console.log(i);\r\n    //         }\r\n    //     }\r\n        \r\n        \r\n\r\n    // }\r\n\r\n  useEffect (() => {getSheets()})\r\n  \r\n\r\n  return (\r\n      <h1>hi</h1>\r\n  )\r\n}\r\n\r\nexport default GeneralPageRenderer"]},"metadata":{},"sourceType":"module"}