{"ast":null,"code":"var _jsxFileName = \"/mnt/c/Users/moust/Documents/Scripts/frontend/src/App.js\";\nimport { Component } from 'react';\nimport { connect } from 'react-redux';\nimport { getTexts } from './actions/text/textsAxiosCallAction';\nimport { getPages } from './actions/pages/pagesAxiosCallAction'; // import Script1List from './components/scripts/script1/componentlist';\n// import Script2List from './components/scripts/script2/componentlist';\n// import Script3List from './components/scripts/script3/componentlist';\n// import Script4List from './components/scripts/script4/componentlist';\n// import Script5List from './components/scripts/script5/componentlist';\n// import Script6List from './components/scripts/script6/componentlist';\n// import Script7List from './components/scripts/script7/componentlist';\n// import Script8List from './components/scripts/script8/componentlist';\n// import Script9List from './components/scripts/script9/componentlist';\n// import Script10List from './components/scripts/script10/componentlist';\n// import Script11List from './components/scripts/script11/componentlist';\n// import Script12List from './components/scripts/script12/componentlist';\n// import Script13List from './components/scripts/script13/componentlist';\n\nimport Users from './components/users/users.js'; // import ScriptDummyList from './components/scripts/dummy script/componentlist';\n\nimport GeneralPageRenderer from './components/scripts/dummy script/pages/generalpage';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nclass App extends Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      buttonList: [/*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: () => this.handleClick(\"dummy\"),\n        children: [\"Script \", \"dummy\"]\n      }, \"dummy\", true, {\n        fileName: _jsxFileName,\n        lineNumber: 28,\n        columnNumber: 18\n      }, this)],\n      hamburger_is_clicked: false,\n      options: ''\n    };\n\n    this.componentDidMount = () => {\n      this.makeButtons();\n    };\n\n    this.hamburgerClick = event => {\n      if (this.state.hamburger_is_clicked === true) {\n        this.setState({\n          hamburger_is_clicked: false,\n          options: ''\n        });\n      } else if (this.state.hamburger_is_clicked === false) {\n        this.setState({\n          hamburger_is_clicked: true,\n          options: /*#__PURE__*/_jsxDEV(\"div\", {\n            children: [/*#__PURE__*/_jsxDEV(\"p\", {\n              onClick: event => this.stepClick(event, 1),\n              children: \"Step 1\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 46,\n              columnNumber: 13\n            }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n              onClick: event => this.stepClick(event, 2),\n              children: \"Step 2\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 47,\n              columnNumber: 13\n            }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n              onClick: event => this.stepClick(event, 3),\n              children: \"Step 3\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 48,\n              columnNumber: 13\n            }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n              onClick: event => this.stepClick(event, 4),\n              children: \"Step 4\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 49,\n              columnNumber: 13\n            }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n              onClick: event => this.stepClick(event, 5),\n              children: \"Step 5\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 50,\n              columnNumber: 13\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 45,\n            columnNumber: 9\n          }, this)\n        });\n      }\n    };\n\n    this.stepClick = (e, choice) => {\n      if (choice === 1) {\n        this.setState({\n          curr_component: /*#__PURE__*/_jsxDEV(Step1, {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 58,\n            columnNumber: 40\n          }, this),\n          hamburger_is_clicked: false,\n          options: ''\n        });\n      } else if (choice === 2) {\n        this.setState({\n          curr_component: /*#__PURE__*/_jsxDEV(Step2, {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 61,\n            columnNumber: 40\n          }, this),\n          hamburger_is_clicked: false,\n          options: ''\n        });\n      } else if (choice === 3) {\n        this.setState({\n          curr_component: /*#__PURE__*/_jsxDEV(Step3, {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 64,\n            columnNumber: 40\n          }, this),\n          hamburger_is_clicked: false,\n          options: ''\n        });\n      } else if (choice === 4) {\n        this.setState({\n          curr_component: /*#__PURE__*/_jsxDEV(Step4, {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 67,\n            columnNumber: 40\n          }, this),\n          hamburger_is_clicked: false,\n          options: ''\n        });\n      } else if (choice === 5) {\n        this.setState({\n          curr_component: /*#__PURE__*/_jsxDEV(Step5, {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 70,\n            columnNumber: 40\n          }, this),\n          hamburger_is_clicked: false,\n          options: ''\n        });\n      }\n    };\n\n    this.handleClick = script_number => {\n      //Once a button is clicked, it takes you to the coresponding component\n      this.setState({\n        buttonList: null\n      });\n      this.props.getPages(script_number);\n      this.props.getTexts(script_number);\n    };\n\n    this.makeButtons = () => {\n      //Makes the button list depending on the componenents present in the componenet list\n      for (let i = 1; i < 14; i++) {\n        this.setState(prevstate => ({\n          buttonList: prevstate.buttonList.concat( /*#__PURE__*/_jsxDEV(\"button\", {\n            onClick: () => this.handleClick(i.toString()),\n            children: [\"Script \", i]\n          }, i, true, {\n            fileName: _jsxFileName,\n            lineNumber: 84,\n            columnNumber: 78\n          }, this))\n        }));\n      }\n    };\n  }\n\n  render() {\n    if (this.props.user.token === null) {\n      return /*#__PURE__*/_jsxDEV(Users, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 92,\n        columnNumber: 7\n      }, this);\n    } else {\n      if (this.props.pages_loading || this.props.texts_loading) {\n        return /*#__PURE__*/_jsxDEV(\"h1\", {\n          children: \"Loading\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 98,\n          columnNumber: 11\n        }, this);\n      } else if ((this.props.pages.pagesChosen === null || this.props.texts.curatedTextsFromCurrentScript === null) && this.props.pages !== null && this.props.texts !== null) {\n        return /*#__PURE__*/_jsxDEV(\"div\", {\n          children: this.state.buttonList\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 103,\n          columnNumber: 11\n        }, this);\n      } else {\n        return /*#__PURE__*/_jsxDEV(\"div\", {\n          children: [/*#__PURE__*/_jsxDEV(GeneralPageRenderer, {\n            pages: this.props.pages.pagesChosen,\n            texts: this.props.texts.curatedTextsFromCurrentScript\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 111,\n            columnNumber: 14\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"hamburger_menu_div\",\n            children: [/*#__PURE__*/_jsxDEV(\"img\", {\n              className: this.state.hamburger_is_clicked ? \"rotate\" : \"no_rotate\",\n              src: hamburgerMenu,\n              alt: \"Hamburger menu icon\",\n              onClick: event => this.hamburgerClick(event)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 113,\n              columnNumber: 19\n            }, this), this.state.options]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 112,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 110,\n          columnNumber: 11\n        }, this);\n      }\n    }\n  }\n\n}\n\nconst mapStateToProps = state => {\n  return {\n    pages: state.pages,\n    texts: state.texts,\n    user: state.user,\n    pages_loading: state.pages.loading,\n    texts_loading: state.texts.loading\n  };\n};\n\nexport default connect(mapStateToProps, {\n  getPages,\n  getTexts\n})(App); //<Script1List />, <Script2List />, <Script3List />, <Script4List />, <Script5List />, <Script6List />, <Script7List />, <Script8List />, <Script9List />, <Script10List />, <Script11List />, <Script12List />, <Script13List />","map":{"version":3,"sources":["/mnt/c/Users/moust/Documents/Scripts/frontend/src/App.js"],"names":["Component","connect","getTexts","getPages","Users","GeneralPageRenderer","App","state","buttonList","handleClick","hamburger_is_clicked","options","componentDidMount","makeButtons","hamburgerClick","event","setState","stepClick","e","choice","curr_component","script_number","props","i","prevstate","concat","toString","render","user","token","pages_loading","texts_loading","pages","pagesChosen","texts","curatedTextsFromCurrentScript","hamburgerMenu","mapStateToProps","loading"],"mappings":"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","sourcesContent":["import { Component } from 'react';\nimport { connect } from 'react-redux';\nimport { getTexts } from './actions/text/textsAxiosCallAction';\nimport { getPages } from './actions/pages/pagesAxiosCallAction';\n\n\n// import Script1List from './components/scripts/script1/componentlist';\n// import Script2List from './components/scripts/script2/componentlist';\n// import Script3List from './components/scripts/script3/componentlist';\n// import Script4List from './components/scripts/script4/componentlist';\n// import Script5List from './components/scripts/script5/componentlist';\n// import Script6List from './components/scripts/script6/componentlist';\n// import Script7List from './components/scripts/script7/componentlist';\n// import Script8List from './components/scripts/script8/componentlist';\n// import Script9List from './components/scripts/script9/componentlist';\n// import Script10List from './components/scripts/script10/componentlist';\n// import Script11List from './components/scripts/script11/componentlist';\n// import Script12List from './components/scripts/script12/componentlist';\n// import Script13List from './components/scripts/script13/componentlist';\nimport Users from './components/users/users.js';\n// import ScriptDummyList from './components/scripts/dummy script/componentlist';\nimport GeneralPageRenderer from './components/scripts/dummy script/pages/generalpage';\n\n\nclass App extends Component {\n  \n  state = {\n    buttonList: [<button key={\"dummy\"} onClick={() => this.handleClick(\"dummy\")}>Script {\"dummy\"}</button>],\n    hamburger_is_clicked: false,\n    options: ''\n  }\n\n  componentDidMount = () => {\n    this.makeButtons();\n  }\n\n  hamburgerClick = (event) => {\n    if (this.state.hamburger_is_clicked === true){\n        this.setState({hamburger_is_clicked: false, options: ''})\n    }\n  \n    else if (this.state.hamburger_is_clicked === false){\n        this.setState({hamburger_is_clicked: true,\n        options: \n        <div>\n            <p onClick={event => this.stepClick(event, 1)}>Step 1</p>\n            <p onClick={event => this.stepClick(event, 2)}>Step 2</p>\n            <p onClick={event => this.stepClick(event, 3)}>Step 3</p>\n            <p onClick={event => this.stepClick(event, 4)}>Step 4</p>\n            <p onClick={event => this.stepClick(event, 5)}>Step 5</p>\n        </div>\n    })\n    }\n  }\n  \n  stepClick = (e, choice) => {\n    if (choice === 1){\n        this.setState({curr_component: <Step1 />, hamburger_is_clicked: false, options: ''})\n    }\n    else if (choice === 2){\n        this.setState({curr_component: <Step2 />, hamburger_is_clicked: false, options: ''})\n    }\n    else if (choice === 3){\n        this.setState({curr_component: <Step3 />, hamburger_is_clicked: false, options: ''})\n    }\n    else if (choice === 4){\n        this.setState({curr_component: <Step4 />, hamburger_is_clicked: false, options: ''})\n    }\n    else if (choice === 5){\n        this.setState({curr_component: <Step5 />, hamburger_is_clicked: false, options: ''})\n    }\n    \n  }\n\n  handleClick = (script_number) => {//Once a button is clicked, it takes you to the coresponding component\n    this.setState({buttonList: null});\n    this.props.getPages(script_number);\n    this.props.getTexts(script_number);\n  }\n\n\n  makeButtons = () => {//Makes the button list depending on the componenents present in the componenet list\n    for (let i = 1; i < 14; i++){\n      this.setState((prevstate) => ({buttonList: prevstate.buttonList.concat(<button key={i} onClick={() => this.handleClick(i.toString())}>Script {i}</button>)}));\n    } \n    \n  }\n\n  render() {\n    if (this.props.user.token === null){\n      return(\n      <Users />\n      )\n    }\n    else{\n      if ((this.props.pages_loading || this.props.texts_loading)){\n        return(\n          <h1>Loading</h1>\n        )\n      }\n      else if ((this.props.pages.pagesChosen === null || this.props.texts.curatedTextsFromCurrentScript === null) && (this.props.pages !== null && this.props.texts !== null )){\n        return (\n          <div>\n            {this.state.buttonList}\n          </div>\n        )\n      }\n      else{\n        return(\n          <div>\n            {<GeneralPageRenderer pages={this.props.pages.pagesChosen} texts={this.props.texts.curatedTextsFromCurrentScript} />}\n            <div className=\"hamburger_menu_div\">\n                  <img className={this.state.hamburger_is_clicked ? \"rotate\" : \"no_rotate\"} src={hamburgerMenu} alt=\"Hamburger menu icon\" onClick={(event) => this.hamburgerClick(event)} />\n                  {this.state.options}\n            </div>\n          </div>\n          \n        )\n      }\n    }\n    \n    \n  } \n}\n\nconst mapStateToProps = state => {\n  return{\n    pages: state.pages,\n    texts: state.texts,\n    user: state.user,\n    pages_loading: state.pages.loading,\n    texts_loading: state.texts.loading\n  }\n}\n\nexport default connect(mapStateToProps, {getPages, getTexts})(App);\n\n//<Script1List />, <Script2List />, <Script3List />, <Script4List />, <Script5List />, <Script6List />, <Script7List />, <Script8List />, <Script9List />, <Script10List />, <Script11List />, <Script12List />, <Script13List />\n\n\n\n"]},"metadata":{},"sourceType":"module"}