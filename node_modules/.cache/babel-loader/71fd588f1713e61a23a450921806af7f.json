{"ast":null,"code":"var _jsxFileName = \"/mnt/c/Users/moust/Documents/Scripts/frontend/src/components/scripts/dummy script/pages/generalpage.js\";\nimport { Component } from 'react';\nimport ContentEditable from 'react-contenteditable';\nimport { connect } from 'react-redux';\nimport { submitButtonClicked } from '../../../../actions/pages/contentEditableOrSubmitClicked';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nclass GeneralPageRenderer extends Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      page: null,\n      page_content: null,\n      submitButton: null\n    };\n\n    this.handleContentClicked = event => {\n      this.setState({\n        submitButton: /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: event => this.handleSubmit(),\n          className: \"website_change_submit_button\",\n          children: \"Submit Changes\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 25,\n          columnNumber: 38\n        }, this)\n      });\n    };\n\n    this.handleSubmit = event => {\n      event.preventDefault();\n      this.props.submitButtonClicked(this.state);\n    };\n\n    this.handleChangeInContentEditable = event => {\n      this.setState({\n        content: event.target.value\n      });\n    };\n  }\n\n  componentDidMount() {\n    console.log(this.props); //For now, this is set. In the future, we will need to convey some way to suggest that something is changing and thus we will need to \n    //Account for that by way of a reducer/action\n\n    const pageData = this.props.pages.find(page_data => {\n      return page_data.page_number === this.props.currentPageNumber.toString();\n    });\n    this.setState({\n      page: pageData,\n      page_content: pageData.content\n    });\n  }\n\n  render() {\n    if (this.state.content === null) {\n      return /*#__PURE__*/_jsxDEV(\"h1\", {\n        children: \"Loading\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 39,\n        columnNumber: 17\n      }, this);\n    }\n\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(ContentEditable, {\n        onClick: event => this.handleContentClicked(),\n        onChange: event => this.handleChangeInContentEditable(event),\n        html: this.state.content\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 44,\n        columnNumber: 17\n      }, this), this.state.submitButton]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 43,\n      columnNumber: 13\n    }, this);\n  }\n\n}\n\nexport default connect({\n  submitButtonClicked\n})(GeneralPageRenderer);","map":{"version":3,"sources":["/mnt/c/Users/moust/Documents/Scripts/frontend/src/components/scripts/dummy script/pages/generalpage.js"],"names":["Component","ContentEditable","connect","submitButtonClicked","GeneralPageRenderer","state","page","page_content","submitButton","handleContentClicked","event","setState","handleSubmit","preventDefault","props","handleChangeInContentEditable","content","target","value","componentDidMount","console","log","pageData","pages","find","page_data","page_number","currentPageNumber","toString","render"],"mappings":";AAAA,SAAQA,SAAR,QAAwB,OAAxB;AACA,OAAOC,eAAP,MAA4B,uBAA5B;AAEA,SAASC,OAAT,QAAwB,aAAxB;AAEA,SAASC,mBAAT,QAAoC,0DAApC;;;AAGA,MAAMC,mBAAN,SAAkCJ,SAAlC,CAA2C;AAAA;AAAA;AAAA,SAEvCK,KAFuC,GAE/B;AACJC,MAAAA,IAAI,EAAE,IADF;AAEJC,MAAAA,YAAY,EAAE,IAFV;AAGJC,MAAAA,YAAY,EAAE;AAHV,KAF+B;;AAAA,SAevCC,oBAfuC,GAefC,KAAD,IAAW;AAC9B,WAAKC,QAAL,CAAc;AAACH,QAAAA,YAAY,eAAE;AAAQ,UAAA,OAAO,EAAEE,KAAK,IAAI,KAAKE,YAAL,EAA1B;AAA+C,UAAA,SAAS,EAAC,8BAAzD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAf,OAAd;AACH,KAjBsC;;AAAA,SAmBvCA,YAnBuC,GAmBvBF,KAAD,IAAW;AACtBA,MAAAA,KAAK,CAACG,cAAN;AACA,WAAKC,KAAL,CAAWX,mBAAX,CAA+B,KAAKE,KAApC;AACH,KAtBsC;;AAAA,SAuBvCU,6BAvBuC,GAuBNL,KAAD,IAAW;AACvC,WAAKC,QAAL,CAAc;AAACK,QAAAA,OAAO,EAAEN,KAAK,CAACO,MAAN,CAAaC;AAAvB,OAAd;AACH,KAzBsC;AAAA;;AAOvCC,EAAAA,iBAAiB,GAAE;AACfC,IAAAA,OAAO,CAACC,GAAR,CAAY,KAAKP,KAAjB,EADe,CAEf;AACA;;AACA,UAAMQ,QAAQ,GAAG,KAAKR,KAAL,CAAWS,KAAX,CAAiBC,IAAjB,CAAsBC,SAAS,IAAI;AAAC,aAAOA,SAAS,CAACC,WAAV,KAA0B,KAAKZ,KAAL,CAAWa,iBAAX,CAA6BC,QAA7B,EAAjC;AAAyE,KAA7G,CAAjB;AACA,SAAKjB,QAAL,CAAc;AAACL,MAAAA,IAAI,EAAEgB,QAAP;AAAiBf,MAAAA,YAAY,EAAEe,QAAQ,CAACN;AAAxC,KAAd;AACH;;AAcDa,EAAAA,MAAM,GAAE;AACJ,QAAI,KAAKxB,KAAL,CAAWW,OAAX,KAAuB,IAA3B,EAAgC;AAC5B,0BACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cADJ;AAGH;;AACD,wBACI;AAAA,8BACI,QAAC,eAAD;AAAiB,QAAA,OAAO,EAAEN,KAAK,IAAI,KAAKD,oBAAL,EAAnC;AAAgE,QAAA,QAAQ,EAAEC,KAAK,IAAI,KAAKK,6BAAL,CAAmCL,KAAnC,CAAnF;AACA,QAAA,IAAI,EAAE,KAAKL,KAAL,CAAWW;AADjB;AAAA;AAAA;AAAA;AAAA,cADJ,EAGK,KAAKX,KAAL,CAAWG,YAHhB;AAAA;AAAA;AAAA;AAAA;AAAA,YADJ;AAOH;;AAxCsC;;AA8C3C,eAAeN,OAAO,CAAC;AAACC,EAAAA;AAAD,CAAD,CAAP,CAA+BC,mBAA/B,CAAf","sourcesContent":["import {Component} from 'react';\r\nimport ContentEditable from 'react-contenteditable';\r\n\r\nimport { connect } from 'react-redux';\r\n\r\nimport { submitButtonClicked } from '../../../../actions/pages/contentEditableOrSubmitClicked';\r\n\r\n\r\nclass GeneralPageRenderer extends Component{\r\n    \r\n    state = {\r\n        page: null,\r\n        page_content: null,\r\n        submitButton: null\r\n    }\r\n    componentDidMount(){\r\n        console.log(this.props)\r\n        //For now, this is set. In the future, we will need to convey some way to suggest that something is changing and thus we will need to \r\n        //Account for that by way of a reducer/action\r\n        const pageData = this.props.pages.find(page_data => {return page_data.page_number === this.props.currentPageNumber.toString()})\r\n        this.setState({page: pageData, page_content: pageData.content})\r\n    }\r\n\r\n    handleContentClicked = (event) => {\r\n        this.setState({submitButton: <button onClick={event => this.handleSubmit()} className=\"website_change_submit_button\">Submit Changes</button>})\r\n    }\r\n\r\n    handleSubmit = (event) => {\r\n        event.preventDefault();\r\n        this.props.submitButtonClicked(this.state)\r\n    }\r\n    handleChangeInContentEditable = (event) => {\r\n        this.setState({content: event.target.value})\r\n    }\r\n\r\n    render(){\r\n        if (this.state.content === null){\r\n            return(\r\n                <h1>Loading</h1>\r\n            )\r\n        }\r\n        return(\r\n            <div>\r\n                <ContentEditable onClick={event => this.handleContentClicked()} onChange={event => this.handleChangeInContentEditable(event)}\r\n                html={this.state.content} />\r\n                {this.state.submitButton}\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\n\r\n\r\n\r\nexport default connect({submitButtonClicked})(GeneralPageRenderer);"]},"metadata":{},"sourceType":"module"}