{"ast":null,"code":"var _jsxFileName = \"/mnt/c/Users/moust/Documents/Scripts/frontend/src/App.js\";\nimport { Component } from 'react';\nimport { connect } from 'react-redux';\nimport { getTexts, changeTexts } from './actions/text';\nimport { userLogout, autoLogin } from './actions/user';\nimport hamburgerMenu from \"./components/scripts/pictures/hamburger_menu.png\";\nimport './App.css'; // import Script1List from './components/scripts/script1/componentlist';\n// import Script2List from './components/scripts/script2/componentlist';\n// import Script3List from './components/scripts/script3/componentlist';\n// import Script4List from './components/scripts/script4/componentlist';\n// import Script5List from './components/scripts/script5/componentlist';\n// import Script6List from './components/scripts/script6/componentlist';\n// import Script7List from './components/scripts/script7/componentlist';\n// import Script8List from './components/scripts/script8/componentlist';\n// import Script9List from './components/scripts/script9/componentlist';\n// import Script10List from './components/scripts/script10/componentlist';\n// import Script11List from './components/scripts/script11/componentlist';\n// import Script12List from './components/scripts/script12/componentlist';\n// import Script13List from './components/scripts/script13/componentlist';\n\nimport Users from './components/users/users.js'; // import ScriptDummyList from './components/scripts/dummy script/componentlist';\n\nimport GeneralPageRenderer from './components/scripts/dummy script/pages/generalpage';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nclass App extends Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      buttonList: [/*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: () => this.handleClick(\"dummy\"),\n        children: [\"Script \", \"dummy\"]\n      }, \"dummy\", true, {\n        fileName: _jsxFileName,\n        lineNumber: 30,\n        columnNumber: 18\n      }, this)],\n      hamburger_is_clicked: false,\n      options: ''\n    };\n\n    this.componentDidMount = () => {\n      if (localStorage.getItem(\"token\")) {\n        this.props.autoLogin();\n      }\n\n      this.makeButtons();\n    };\n\n    this.hamburgerClick = event => {\n      if (this.state.hamburger_is_clicked === true) {\n        this.setState({\n          hamburger_is_clicked: false,\n          options: ''\n        });\n      } else if (this.state.hamburger_is_clicked === false) {\n        this.setState({\n          hamburger_is_clicked: true,\n          options: /*#__PURE__*/_jsxDEV(\"div\", {\n            children: [/*#__PURE__*/_jsxDEV(\"p\", {\n              onClick: event => this.stepClick(event, 1),\n              children: \"Edit Page\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 51,\n              columnNumber: 13\n            }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n              onClick: event => this.stepClick(event, 2),\n              children: \"Change Script\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 52,\n              columnNumber: 13\n            }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n              onClick: event => this.stepClick(event, 3),\n              children: \"Logout\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 53,\n              columnNumber: 13\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 50,\n            columnNumber: 9\n          }, this)\n        });\n      }\n    };\n\n    this.stepClick = (e, choice) => {\n      if (choice === 1) {//When I figure out the stuff with content editable then I will do this \n      } else if (choice === 2) {\n        this.setState({\n          buttonList: [/*#__PURE__*/_jsxDEV(\"button\", {\n            onClick: () => this.handleClick(\"dummy\"),\n            children: [\"Script \", \"dummy\"]\n          }, \"dummy\", true, {\n            fileName: _jsxFileName,\n            lineNumber: 64,\n            columnNumber: 35\n          }, this)]\n        });\n        this.makeButtons();\n        this.props.changeTexts();\n      } else if (choice === 3) {\n        this.props.userLogout();\n      }\n    };\n\n    this.handleClick = script_number => {\n      //Once a button is clicked, it takes you to the coresponding component\n      this.setState({\n        buttonList: null\n      });\n      this.props.getTexts(script_number);\n    };\n\n    this.makeButtons = () => {\n      //Makes the button list depending on the componenents present in the componenet list\n      for (let i = 1; i < 14; i++) {\n        this.setState(prevstate => ({\n          buttonList: prevstate.buttonList.concat( /*#__PURE__*/_jsxDEV(\"button\", {\n            onClick: () => this.handleClick(i.toString()),\n            children: [\"Script \", i]\n          }, i, true, {\n            fileName: _jsxFileName,\n            lineNumber: 82,\n            columnNumber: 78\n          }, this))\n        }));\n      }\n    };\n  }\n\n  render() {\n    if (localStorage.getItem(\"token\")) {\n      if (this.props.pages_loading || this.props.texts_loading) {\n        return /*#__PURE__*/_jsxDEV(\"h1\", {\n          children: \"Loading\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 91,\n          columnNumber: 11\n        }, this);\n      }\n\n      if (this.props.pages.pagesChosen === null || this.props.texts.curatedTextsFromCurrentScript === null) {\n        return /*#__PURE__*/_jsxDEV(\"div\", {\n          children: this.state.buttonList\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 96,\n          columnNumber: 11\n        }, this);\n      } else {\n        return /*#__PURE__*/_jsxDEV(\"div\", {\n          children: [/*#__PURE__*/_jsxDEV(GeneralPageRenderer, {\n            pages: this.props.pages.pagesChosen,\n            texts: this.props.texts.curatedTextsFromCurrentScript\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 104,\n            columnNumber: 14\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"hamburger_menu_div\",\n            children: [/*#__PURE__*/_jsxDEV(\"img\", {\n              className: this.state.hamburger_is_clicked ? \"rotate\" : \"no_rotate\",\n              src: hamburgerMenu,\n              alt: \"Hamburger menu icon\",\n              onClick: event => this.hamburgerClick(event)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 106,\n              columnNumber: 19\n            }, this), this.state.options]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 105,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 103,\n          columnNumber: 11\n        }, this);\n      }\n    } else {\n      return /*#__PURE__*/_jsxDEV(Users, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 116,\n        columnNumber: 9\n      }, this);\n    }\n  }\n\n}\n\nconst mapStateToProps = state => {\n  return {\n    pages: state.pages,\n    texts: state.texts,\n    user: state.user,\n    pages_loading: state.pages.loading,\n    texts_loading: state.texts.loading\n  };\n};\n\nconst mapDispatchToProps = dispatch => {\n  return {\n    getTexts: script_number => dispatch(getTexts(script_number)),\n    changeTexts: () => dispatch(changeTexts()),\n    userLogout: () => dispatch(userLogout()),\n    autoLogin: () => dispatch(autoLogin())\n  };\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(App);","map":{"version":3,"sources":["/mnt/c/Users/moust/Documents/Scripts/frontend/src/App.js"],"names":["Component","connect","getTexts","changeTexts","userLogout","autoLogin","hamburgerMenu","Users","GeneralPageRenderer","App","state","buttonList","handleClick","hamburger_is_clicked","options","componentDidMount","localStorage","getItem","props","makeButtons","hamburgerClick","event","setState","stepClick","e","choice","script_number","i","prevstate","concat","toString","render","pages_loading","texts_loading","pages","pagesChosen","texts","curatedTextsFromCurrentScript","mapStateToProps","user","loading","mapDispatchToProps","dispatch"],"mappings":"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","sourcesContent":["import { Component } from 'react';\nimport { connect } from 'react-redux';\nimport { getTexts, changeTexts } from './actions/text';\nimport { userLogout, autoLogin } from './actions/user';\n\nimport hamburgerMenu from \"./components/scripts/pictures/hamburger_menu.png\";\nimport './App.css';\n\n// import Script1List from './components/scripts/script1/componentlist';\n// import Script2List from './components/scripts/script2/componentlist';\n// import Script3List from './components/scripts/script3/componentlist';\n// import Script4List from './components/scripts/script4/componentlist';\n// import Script5List from './components/scripts/script5/componentlist';\n// import Script6List from './components/scripts/script6/componentlist';\n// import Script7List from './components/scripts/script7/componentlist';\n// import Script8List from './components/scripts/script8/componentlist';\n// import Script9List from './components/scripts/script9/componentlist';\n// import Script10List from './components/scripts/script10/componentlist';\n// import Script11List from './components/scripts/script11/componentlist';\n// import Script12List from './components/scripts/script12/componentlist';\n// import Script13List from './components/scripts/script13/componentlist';\nimport Users from './components/users/users.js';\n// import ScriptDummyList from './components/scripts/dummy script/componentlist';\nimport GeneralPageRenderer from './components/scripts/dummy script/pages/generalpage';\n\n\nclass App extends Component {\n  \n  state = {\n    buttonList: [<button key={\"dummy\"} onClick={() => this.handleClick(\"dummy\")}>Script {\"dummy\"}</button>],\n    hamburger_is_clicked: false,\n    options: ''\n  }\n\n  componentDidMount = () => {\n    if (localStorage.getItem(\"token\")){\n      this.props.autoLogin();\n    }\n    this.makeButtons();\n  }\n\n  hamburgerClick = (event) => {\n    if (this.state.hamburger_is_clicked === true){\n        this.setState({hamburger_is_clicked: false, options: ''})\n    }\n  \n    else if (this.state.hamburger_is_clicked === false){\n        this.setState({hamburger_is_clicked: true,\n        options: \n        <div>\n            <p onClick={event => this.stepClick(event, 1)}>Edit Page</p>\n            <p onClick={event => this.stepClick(event, 2)}>Change Script</p>\n            <p onClick={event => this.stepClick(event, 3)}>Logout</p>\n        </div>\n    })\n    }\n  }\n  \n  stepClick = (e, choice) => {\n    if (choice === 1){\n      //When I figure out the stuff with content editable then I will do this \n    }\n    else if (choice === 2){\n      this.setState({buttonList: [<button key={\"dummy\"} onClick={() => this.handleClick(\"dummy\")}>Script {\"dummy\"}</button>] })\n      this.makeButtons();\n      this.props.changeTexts();\n    }\n    else if (choice === 3){\n      this.props.userLogout();\n    }\n     \n  }\n\n  handleClick = (script_number) => {//Once a button is clicked, it takes you to the coresponding component\n    this.setState({buttonList: null});\n    this.props.getTexts(script_number);\n  }\n\n\n  makeButtons = () => {//Makes the button list depending on the componenents present in the componenet list\n    for (let i = 1; i < 14; i++){\n      this.setState((prevstate) => ({buttonList: prevstate.buttonList.concat(<button key={i} onClick={() => this.handleClick(i.toString())}>Script {i}</button>)}));\n    } \n    \n  }\n\n  render() {\n    if (localStorage.getItem(\"token\")){\n      if ((this.props.pages_loading || this.props.texts_loading)){\n        return(\n          <h1>Loading</h1>\n        )\n      }\n      if ((this.props.pages.pagesChosen === null || this.props.texts.curatedTextsFromCurrentScript === null)){\n        return (\n          <div>\n            {this.state.buttonList}\n          </div>\n        )\n      }\n      else{\n        return(\n          <div>\n            {<GeneralPageRenderer pages={this.props.pages.pagesChosen} texts={this.props.texts.curatedTextsFromCurrentScript} />}\n            <div className=\"hamburger_menu_div\">\n                  <img className={this.state.hamburger_is_clicked ? \"rotate\" : \"no_rotate\"} src={hamburgerMenu} alt=\"Hamburger menu icon\" onClick={(event) => this.hamburgerClick(event)} />\n                  {this.state.options}\n            </div>\n          </div>\n          \n        )\n      }\n    }\n    else{\n      return(\n        <Users />\n        )\n      }\n  }\n} \n\n\nconst mapStateToProps = state => {\n  return{\n    pages: state.pages,\n    texts: state.texts,\n    user: state.user,\n    pages_loading: state.pages.loading,\n    texts_loading: state.texts.loading\n  }\n}\n\nconst mapDispatchToProps = dispatch => {\n  return{\n      getTexts: (script_number) => dispatch(getTexts(script_number)),\n      changeTexts: () => dispatch(changeTexts()),\n      userLogout: () => dispatch(userLogout()),\n      autoLogin: () => dispatch(autoLogin())\n  }\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(App);\n"]},"metadata":{},"sourceType":"module"}