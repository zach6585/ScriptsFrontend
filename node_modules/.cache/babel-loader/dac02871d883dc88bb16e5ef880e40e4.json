{"ast":null,"code":"var _jsxFileName = \"/mnt/c/Users/moust/Documents/Scripts/frontend/src/App.js\";\nimport { Component } from 'react';\nimport { connect } from 'react-redux';\nimport { getTexts } from './actions/text/textsAxiosCallAction';\nimport { getPages } from './actions/script/scriptAxiosCallAction'; // import Script1List from './components/scripts/script1/componentlist';\n// import Script2List from './components/scripts/script2/componentlist';\n// import Script3List from './components/scripts/script3/componentlist';\n// import Script4List from './components/scripts/script4/componentlist';\n// import Script5List from './components/scripts/script5/componentlist';\n// import Script6List from './components/scripts/script6/componentlist';\n// import Script7List from './components/scripts/script7/componentlist';\n// import Script8List from './components/scripts/script8/componentlist';\n// import Script9List from './components/scripts/script9/componentlist';\n// import Script10List from './components/scripts/script10/componentlist';\n// import Script11List from './components/scripts/script11/componentlist';\n// import Script12List from './components/scripts/script12/componentlist';\n// import Script13List from './components/scripts/script13/componentlist';\n// import Users from './components/users/users.js';\n\nimport ScriptDummyList from './components/scripts/dummy script/componentlist';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nclass App extends Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      componentList: [/*#__PURE__*/_jsxDEV(ScriptDummyList, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 28,\n        columnNumber: 21\n      }, this)],\n      buttonList: [/*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: () => this.handleClick(\"dummy\"),\n        children: [\"Script \", \"dummy\"]\n      }, \"dummy\", true, {\n        fileName: _jsxFileName,\n        lineNumber: 28,\n        columnNumber: 56\n      }, this)]\n    };\n\n    this.componentDidMount = () => {\n      this.makeButtons();\n    };\n\n    this.handleClick = script_number => {\n      //Once a button is clicked, it takes you to the coresponding component\n      this.setState({\n        buttonList: null\n      });\n      this.props.getPages(script_number);\n      this.props.getTexts(script_number);\n    };\n\n    this.makeButtons = () => {//Makes the button list depending on the componenents present in the componenet list\n      // for (let i = 1; i < 14; i++){\n      //   this.setState((prevstate) => ({buttonList: prevstate.buttonList.concat(<button key={i} onClick={() => this.handleClick(i.toString())}>Script {i}</button>)}));\n      // } \n    };\n  }\n\n  render() {\n    if (this.props.script.pagesChosen === null || this.props.texts.curatedTextsFromCurrentScript === null) {\n      return /*#__PURE__*/_jsxDEV(\"div\", {\n        children: this.state.buttonList\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 54,\n        columnNumber: 9\n      }, this);\n    } else {\n      return /*#__PURE__*/_jsxDEV(\"div\", {\n        children: /*#__PURE__*/_jsxDEV(ScriptDummyList, {\n          script: this.props.script,\n          texts: this.props.texts\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 62,\n          columnNumber: 12\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 61,\n        columnNumber: 9\n      }, this);\n    }\n  }\n\n}\n\nconst mapStateToProps = state => {\n  return {\n    script: state.script,\n    texts: state.texts,\n    script_loading: state.script.loading,\n    texts_loading: state.texts.loading\n  };\n};\n\nexport default connect(mapStateToProps, {\n  getScript,\n  getTexts\n})(App); //<Script1List />, <Script2List />, <Script3List />, <Script4List />, <Script5List />, <Script6List />, <Script7List />, <Script8List />, <Script9List />, <Script10List />, <Script11List />, <Script12List />, <Script13List />","map":{"version":3,"sources":["/mnt/c/Users/moust/Documents/Scripts/frontend/src/App.js"],"names":["Component","connect","getTexts","getPages","ScriptDummyList","App","state","componentList","buttonList","handleClick","componentDidMount","makeButtons","script_number","setState","props","render","script","pagesChosen","texts","curatedTextsFromCurrentScript","mapStateToProps","script_loading","loading","texts_loading","getScript"],"mappings":";AACA,SAASA,SAAT,QAA0B,OAA1B;AACA,SAASC,OAAT,QAAwB,aAAxB;AACA,SAASC,QAAT,QAAyB,qCAAzB;AACA,SAASC,QAAT,QAAyB,wCAAzB,C,CAGA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AACA,OAAOC,eAAP,MAA4B,iDAA5B;;;AAGA,MAAMC,GAAN,SAAkBL,SAAlB,CAA4B;AAAA;AAAA;AAAA,SAE1BM,KAF0B,GAElB;AACNC,MAAAA,aAAa,EAAE,cAAC,QAAC,eAAD;AAAA;AAAA;AAAA;AAAA,cAAD,CADT;AACgCC,MAAAA,UAAU,EAAE,cAAC;AAAsB,QAAA,OAAO,EAAE,MAAM,KAAKC,WAAL,CAAiB,OAAjB,CAArC;AAAA,8BAAwE,OAAxE;AAAA,SAAa,OAAb;AAAA;AAAA;AAAA;AAAA,cAAD;AAD5C,KAFkB;;AAAA,SAQ1BC,iBAR0B,GAQN,MAAM;AACxB,WAAKC,WAAL;AACD,KAVyB;;AAAA,SAY1BF,WAZ0B,GAYXG,aAAD,IAAmB;AAAC;AAChC,WAAKC,QAAL,CAAc;AAACL,QAAAA,UAAU,EAAE;AAAb,OAAd;AACA,WAAKM,KAAL,CAAWX,QAAX,CAAoBS,aAApB;AACA,WAAKE,KAAL,CAAWZ,QAAX,CAAoBU,aAApB;AACD,KAhByB;;AAAA,SAmB1BD,WAnB0B,GAmBZ,MAAM,CAAC;AACnB;AACA;AACA;AAED,KAxByB;AAAA;;AA0B1BI,EAAAA,MAAM,GAAG;AACP,QAAI,KAAKD,KAAL,CAAWE,MAAX,CAAkBC,WAAlB,KAAkC,IAAlC,IAA0C,KAAKH,KAAL,CAAWI,KAAX,CAAiBC,6BAAjB,KAAmD,IAAjG,EAAsG;AACpG,0BACE;AAAA,kBACG,KAAKb,KAAL,CAAWE;AADd;AAAA;AAAA;AAAA;AAAA,cADF;AAKD,KAND,MAOI;AACF,0BACE;AAAA,+BACG,QAAC,eAAD;AAAiB,UAAA,MAAM,EAAE,KAAKM,KAAL,CAAWE,MAApC;AAA4C,UAAA,KAAK,EAAE,KAAKF,KAAL,CAAWI;AAA9D;AAAA;AAAA;AAAA;AAAA;AADH;AAAA;AAAA;AAAA;AAAA,cADF;AAMD;AAEF;;AA3CyB;;AA8C5B,MAAME,eAAe,GAAGd,KAAK,IAAI;AAC/B,SAAM;AACJU,IAAAA,MAAM,EAAEV,KAAK,CAACU,MADV;AAEJE,IAAAA,KAAK,EAAEZ,KAAK,CAACY,KAFT;AAGJG,IAAAA,cAAc,EAAEf,KAAK,CAACU,MAAN,CAAaM,OAHzB;AAIJC,IAAAA,aAAa,EAAEjB,KAAK,CAACY,KAAN,CAAYI;AAJvB,GAAN;AAMD,CAPD;;AASA,eAAerB,OAAO,CAACmB,eAAD,EAAkB;AAACI,EAAAA,SAAD;AAAYtB,EAAAA;AAAZ,CAAlB,CAAP,CAAgDG,GAAhD,CAAf,C,CAEA","sourcesContent":["\nimport { Component } from 'react';\nimport { connect } from 'react-redux';\nimport { getTexts } from './actions/text/textsAxiosCallAction';\nimport { getPages } from './actions/script/scriptAxiosCallAction';\n\n\n// import Script1List from './components/scripts/script1/componentlist';\n// import Script2List from './components/scripts/script2/componentlist';\n// import Script3List from './components/scripts/script3/componentlist';\n// import Script4List from './components/scripts/script4/componentlist';\n// import Script5List from './components/scripts/script5/componentlist';\n// import Script6List from './components/scripts/script6/componentlist';\n// import Script7List from './components/scripts/script7/componentlist';\n// import Script8List from './components/scripts/script8/componentlist';\n// import Script9List from './components/scripts/script9/componentlist';\n// import Script10List from './components/scripts/script10/componentlist';\n// import Script11List from './components/scripts/script11/componentlist';\n// import Script12List from './components/scripts/script12/componentlist';\n// import Script13List from './components/scripts/script13/componentlist';\n// import Users from './components/users/users.js';\nimport ScriptDummyList from './components/scripts/dummy script/componentlist';\n\n\nclass App extends Component {\n  \n  state = {\n    componentList: [<ScriptDummyList />], buttonList: [<button key={\"dummy\"} onClick={() => this.handleClick(\"dummy\")}>Script {\"dummy\"}</button>]\n  }\n\n  \n\n  componentDidMount = () => {\n    this.makeButtons();\n  }\n\n  handleClick = (script_number) => {//Once a button is clicked, it takes you to the coresponding component\n    this.setState({buttonList: null});\n    this.props.getPages(script_number);\n    this.props.getTexts(script_number);\n  }\n\n\n  makeButtons = () => {//Makes the button list depending on the componenents present in the componenet list\n    // for (let i = 1; i < 14; i++){\n    //   this.setState((prevstate) => ({buttonList: prevstate.buttonList.concat(<button key={i} onClick={() => this.handleClick(i.toString())}>Script {i}</button>)}));\n    // } \n    \n  }\n\n  render() {\n    if (this.props.script.pagesChosen === null || this.props.texts.curatedTextsFromCurrentScript === null){\n      return (\n        <div>\n          {this.state.buttonList}\n        </div>\n      )\n    }\n    else{\n      return(\n        <div>\n          {<ScriptDummyList script={this.props.script} texts={this.props.texts} />}\n        </div>\n        \n      )\n    }\n    \n  } \n}\n\nconst mapStateToProps = state => {\n  return{\n    script: state.script,\n    texts: state.texts,\n    script_loading: state.script.loading,\n    texts_loading: state.texts.loading\n  }\n}\n\nexport default connect(mapStateToProps, {getScript, getTexts})(App);\n\n//<Script1List />, <Script2List />, <Script3List />, <Script4List />, <Script5List />, <Script6List />, <Script7List />, <Script8List />, <Script9List />, <Script10List />, <Script11List />, <Script12List />, <Script13List />\n\n\n"]},"metadata":{},"sourceType":"module"}