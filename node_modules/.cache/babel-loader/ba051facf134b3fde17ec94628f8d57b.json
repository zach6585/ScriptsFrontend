{"ast":null,"code":"var _jsxFileName = \"/mnt/c/Users/moust/Documents/Scripts/frontend/src/components/scripts/dummy script/componentlist.js\";\nimport React, { Component } from 'react';\nimport axios from 'axios';\nimport Page1 from './pages/page1';\nimport Page2 from './pages/page2';\nimport Page3 from './pages/page3';\nimport Page4 from './pages/page4'; // import Page5 from './pages/page5';\n// import Page6 from './pages/page6';\n// import Page7 from './pages/page7';\n// import Page8 from './pages/page8';\n// import Page9 from './pages/page9';\n// import Page10 from './pages/page10';\n// import Page11 from './pages/page11';\n// import Page12 from './pages/page12';\n// import Page13 from './pages/page13';\n\nimport larrow from \"../pictures/larrow.png\";\nimport rarrow from \"../pictures/rarrow.png\";\nimport './dummy.css';\nimport '../allScripts.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nclass ScriptDummyList extends Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      submitButton: null,\n      component_list: [/*#__PURE__*/_jsxDEV(Page1, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 28,\n        columnNumber: 22\n      }, this), /*#__PURE__*/_jsxDEV(Page2, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 28,\n        columnNumber: 33\n      }, this), /*#__PURE__*/_jsxDEV(Page3, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 28,\n        columnNumber: 44\n      }, this), /*#__PURE__*/_jsxDEV(Page4, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 28,\n        columnNumber: 55\n      }, this)]\n    };\n  }\n\n  // componentPropsAssigner = () => {\n  //   //This assigns the needed props to each child component so I don't have to write it out every time\n  //   let component_list_before_adding_props = \n  //   let final_component_list = component_list_before_adding_props.map((child, i) => {\n  //      return (\n  //       React.cloneElement(\n  //         child, \n  //           {\n  //             // handleChangeInContentEditable: this.handleChangeInContentEditable, \n  //             // handleContentEditableClick: this.handleContentEditableClick, \n  //             // handleSubmit: this.handleSubmit, \n  //             // handleChange: this.handleChange, getValue: this.getValue, \n  //             //All of the above functions should be taken care of through redux instead so we'd use connect\n  //             // submitButton: this.state.submitButton,\n  //             // pages: this.props.pages.pagesChosen,\n  //             // texts: this.props.texts.curatedTextsFromCurrentScript\n  //           }\n  //         ))\n  //       })\n  //       return final_component_list\n  //   }\n\n  /*      Functions passed as props      */\n  // handleChangeInContentEditable = (event) => {\n  //   this.setState({content: event.target.value})\n  // }\n  // handleContentEditableClick = (event) => {\n  //   if (this.state.submitButton === null){\n  //       this.setState({submitButton: <button onClick={event => this.handleSubmit(event)} className=\"website_change_submit_button\">Submit Changes</button>});\n  //   }\n  // }\n  // handleSubmit = (event) => {\n  //   event.preventDefault();\n  //   axios.patch(`http://localhost:3001/pages/${this.state.PageID}`, {content: this.state.content})\n  //   this.setState({submitButton: null })\n  // }\n  // handleChange = (event) => {\n  //   //Handles change in text data \n  //   this.setState({text: {...this.state.text, [event.target.id]: {value: event.target.value, id_tag: event.target.id}}})\n  //   if (event.target.id in this.state.text){\n  //       axios.patch(`http://localhost:3001/texts/${this.state.text[event.target.id].id}`, {value: event.target.value, id_tag: event.target.id, script: this.state.script})\n  // }\n  //   else {\n  //       axios.post(\"http://localhost:3001/texts\", {value: event.target.value, id_tag: event.target.id, script: this.state.script })\n  //   }\n  // }\n  // getValue = (id) => {\n  //     for (const i in this.state.text){\n  //         if (this.state.text[i].id_tag === id){\n  //             return this.state.text[i].value;\n  //         }\n  //     }\n  //     return \"\"\n  // }\n  render() {\n    return /*#__PURE__*/_jsxDEV(ThingsRendered, {\n      component_list: this.componentPropsAssigner()\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 97,\n      columnNumber: 9\n    }, this);\n  }\n\n}\n\nclass ThingsRendered extends Component {\n  //The purpose of this class is to allow for a ternary operator to be used to determine when to load the components\n  constructor(props) {\n    super(props);\n\n    this.handleClick = letter => {\n      //This determines which button was pressed\n      if (letter === 'b') {\n        this.setState(prevState => ({\n          pagePos: prevState.pagePos - 1\n        }));\n      } else {\n        this.setState(prevState => ({\n          pagePos: prevState.pagePos + 1\n        }));\n      }\n    };\n\n    this.state = {\n      button_use: {\n        button_back: false,\n        button_forward: true\n      },\n      pagePos: 0,\n      component_list: props.component_list\n    };\n  }\n\n  /*                Render                        */\n  render() {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"Script2\",\n      children: [this.state.component_list[this.state.pagePos], /*#__PURE__*/_jsxDEV(\"div\", {\n        id: \"buttonDiv\",\n        children: [this.state.pagePos === 0 ? null : /*#__PURE__*/_jsxDEV(\"img\", {\n          alt: \"left arrow back\",\n          src: larrow,\n          onClick: () => this.handleClick('b'),\n          className: \"left arrow button\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 133,\n          columnNumber: 47\n        }, this), this.state.pagePos === this.state.component_list.length - 1 ? null : /*#__PURE__*/_jsxDEV(\"img\", {\n          alt: \"right arrow forward\",\n          src: rarrow,\n          onClick: () => this.handleClick('f'),\n          className: \"right arrow button\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 134,\n          columnNumber: 82\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 132,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"h3\", {\n        className: \"page_num\",\n        children: this.state.pagePos + 1\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 136,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 130,\n      columnNumber: 7\n    }, this);\n  }\n\n}\n\nexport default ScriptDummyList;","map":{"version":3,"sources":["/mnt/c/Users/moust/Documents/Scripts/frontend/src/components/scripts/dummy script/componentlist.js"],"names":["React","Component","axios","Page1","Page2","Page3","Page4","larrow","rarrow","ScriptDummyList","state","submitButton","component_list","render","componentPropsAssigner","ThingsRendered","constructor","props","handleClick","letter","setState","prevState","pagePos","button_use","button_back","button_forward","length"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\r\nimport axios from 'axios';\r\n\r\nimport Page1 from './pages/page1';\r\nimport Page2 from './pages/page2';\r\nimport Page3 from './pages/page3';\r\nimport Page4 from './pages/page4';\r\n// import Page5 from './pages/page5';\r\n// import Page6 from './pages/page6';\r\n// import Page7 from './pages/page7';\r\n// import Page8 from './pages/page8';\r\n// import Page9 from './pages/page9';\r\n// import Page10 from './pages/page10';\r\n// import Page11 from './pages/page11';\r\n// import Page12 from './pages/page12';\r\n// import Page13 from './pages/page13';\r\n\r\nimport larrow from \"../pictures/larrow.png\";\r\nimport rarrow from \"../pictures/rarrow.png\";\r\nimport './dummy.css';\r\nimport '../allScripts.css';\r\n\r\n\r\nclass ScriptDummyList extends Component {\r\n\r\n  state = {\r\n    submitButton: null,\r\n    component_list: [<Page1 />, <Page2 />, <Page3 />, <Page4 />]\r\n  }\r\n\r\n\r\n    // componentPropsAssigner = () => {\r\n    //   //This assigns the needed props to each child component so I don't have to write it out every time\r\n    //   let component_list_before_adding_props = \r\n    //   let final_component_list = component_list_before_adding_props.map((child, i) => {\r\n    //      return (\r\n    //       React.cloneElement(\r\n    //         child, \r\n    //           {\r\n    //             // handleChangeInContentEditable: this.handleChangeInContentEditable, \r\n    //             // handleContentEditableClick: this.handleContentEditableClick, \r\n    //             // handleSubmit: this.handleSubmit, \r\n    //             // handleChange: this.handleChange, getValue: this.getValue, \r\n    //             //All of the above functions should be taken care of through redux instead so we'd use connect\r\n    //             // submitButton: this.state.submitButton,\r\n    //             // pages: this.props.pages.pagesChosen,\r\n    //             // texts: this.props.texts.curatedTextsFromCurrentScript\r\n    //           }\r\n    //         ))\r\n    //       })\r\n    //       return final_component_list\r\n    //   }\r\n\r\n      /*      Functions passed as props      */\r\n\r\n\r\n  // handleChangeInContentEditable = (event) => {\r\n  //   this.setState({content: event.target.value})\r\n  // }\r\n  \r\n  // handleContentEditableClick = (event) => {\r\n  //   if (this.state.submitButton === null){\r\n  //       this.setState({submitButton: <button onClick={event => this.handleSubmit(event)} className=\"website_change_submit_button\">Submit Changes</button>});\r\n  //   }\r\n  // }\r\n\r\n  // handleSubmit = (event) => {\r\n  //   event.preventDefault();\r\n  //   axios.patch(`http://localhost:3001/pages/${this.state.PageID}`, {content: this.state.content})\r\n  //   this.setState({submitButton: null })\r\n  // }\r\n\r\n  // handleChange = (event) => {\r\n  //   //Handles change in text data \r\n  //   this.setState({text: {...this.state.text, [event.target.id]: {value: event.target.value, id_tag: event.target.id}}})\r\n  //   if (event.target.id in this.state.text){\r\n  //       axios.patch(`http://localhost:3001/texts/${this.state.text[event.target.id].id}`, {value: event.target.value, id_tag: event.target.id, script: this.state.script})\r\n  // }\r\n  //   else {\r\n  //       axios.post(\"http://localhost:3001/texts\", {value: event.target.value, id_tag: event.target.id, script: this.state.script })\r\n  //   }\r\n  // }\r\n\r\n\r\n  // getValue = (id) => {\r\n  //     for (const i in this.state.text){\r\n  //         if (this.state.text[i].id_tag === id){\r\n  //             return this.state.text[i].value;\r\n  //         }\r\n  //     }\r\n  //     return \"\"\r\n  // }\r\n\r\n      \r\n    render() {\r\n      return(\r\n        <ThingsRendered component_list={this.componentPropsAssigner()} />\r\n      )\r\n    }\r\n  }\r\n\r\n\r\nclass ThingsRendered extends Component{\r\n  //The purpose of this class is to allow for a ternary operator to be used to determine when to load the components\r\n  constructor(props){\r\n    super(props)\r\n    this.state = {\r\n      button_use: {button_back: false, button_forward: true},    \r\n      pagePos: 0,\r\n      component_list: props.component_list\r\n    }\r\n  }\r\n\r\n\r\n  handleClick = (letter) => {//This determines which button was pressed\r\n    if (letter === 'b'){\r\n      this.setState((prevState) => ({pagePos: prevState.pagePos - 1}))\r\n    }\r\n    else {\r\n      this.setState((prevState) => ({pagePos: prevState.pagePos + 1}))\r\n    }\r\n    \r\n  }\r\n\r\n  \r\n\r\n  /*                Render                        */\r\n  render(){\r\n    return(\r\n      <div className=\"Script2\">\r\n        {this.state.component_list[this.state.pagePos]}\r\n        <div id=\"buttonDiv\">\r\n          {this.state.pagePos === 0 ? null :  <img alt=\"left arrow back\" src={larrow} onClick={() => this.handleClick('b')} className=\"left arrow button\"/>}\r\n          {this.state.pagePos === this.state.component_list.length - 1 ? null :  <img alt=\"right arrow forward\" src={rarrow} onClick={() => this.handleClick('f')} className=\"right arrow button\"/>}\r\n        </div>\r\n        <h3 className=\"page_num\">{this.state.pagePos + 1}</h3>\r\n      </div>\r\n    )\r\n  }\r\n}\r\n\r\n\r\n\r\nexport default ScriptDummyList;\r\n"]},"metadata":{},"sourceType":"module"}